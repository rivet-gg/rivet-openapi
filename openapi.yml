openapi: 3.0.1
info:
  title: Rivet API
  version: ''
paths:
  /messages:
    post:
      description: Sends a chat message to a given topic.
      operationId: chat_sendMessage
      tags:
        - Chat
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSendMessageResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: &ref_0
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSendMessageRequest'
  /threads/{thread_id}/history:
    get:
      description: |-
        Returns message history for a given thread in a certain direction.
        Defaults to querying messages before ts.
      operationId: chat_getThreadHistory
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ts
          in: query
          description: RFC3339 timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: count
          in: query
          description: >-
            How many messages to collect in each direction. If querying
            `rivet.api.chat.common#QueryDirection$before_and_after`,
            `rivet.api.chat.common#QueryDirection$chat_messages` will be `count
            * 2`.
          required: true
          schema:
            type: number
            format: double
        - name: query_direction
          in: query
          description: >-
            Represents which direction to query messages from relative to the
            given timestamp.
          required: false
          schema:
            $ref: '#/components/schemas/ChatQueryDirection'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetThreadHistoryResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/live:
    get:
      description: |-
        Fetches all relevant changes from a thread that have happened since the
        given watch index.
      operationId: chat_watchThread
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatWatchThreadResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/read:
    post:
      description: Updates the current identity's last read timestamp in the given thread.
      operationId: chat_setThreadRead
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSetThreadReadRequest'
  /threads/{thread_id}/topic:
    get:
      description: Fetches the topic of a thread.
      operationId: chat_getThreadTopic
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetThreadTopicResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/typing-status:
    put:
      description: Updates the current identity's typing status in the given thread.
      operationId: chat_setTypingStatus
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSetTypingStatusRequest'
  /games/{game_id}/namespaces:
    post:
      description: Creates a new namespace for the given game.
      operationId: cloud_games_namespaces_createGameNamespace
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesCreateGameNamespaceRequest
  /games/{game_id}/namespaces/validate:
    post:
      description: Validates information used to create a new game namespace.
      operationId: cloud_games_namespaces_validateGameNamespace
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceRequest
  /games/{game_id}/namespaces/{namespace_id}:
    get:
      description: Gets a game namespace by namespace ID.
      operationId: cloud_games_namespaces_getGameNamespaceById
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetGameNamespaceByIdResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/auth-user:
    post:
      description: Adds an authenticated user to the given game namespace.
      operationId: cloud_games_namespaces_updateNamespaceCdnAuthUser
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateNamespaceCdnAuthUserRequest
  /games/{game_id}/namespaces/{namespace_id}/auth-user/{user}:
    delete:
      description: Removes an authenticated user from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceCdnAuthUser
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: user
          in: path
          description: A user name.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/cdn-auth:
    put:
      description: Updates the CDN authentication type of the given game namesapce.
      operationId: cloud_games_namespaces_setNamespaceCdnAuthType
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesSetNamespaceCdnAuthTypeRequest
  /games/{game_id}/namespaces/{namespace_id}/domain-public-auth:
    put:
      description: >-
        Toggles whether or not to allow authentication based on domain for the
        given game namesapce.
      operationId: cloud_games_namespaces_toggleNamespaceDomainPublicAuth
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesToggleNamespaceDomainPublicAuthRequest
  /games/{game_id}/namespaces/{namespace_id}/domains:
    post:
      description: Adds a domain to the given game namespace.
      operationId: cloud_games_namespaces_addNamespaceDomain
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesAddNamespaceDomainRequest
  /games/{game_id}/namespaces/{namespace_id}/domains/{domain}:
    delete:
      description: Removes a domain from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceDomain
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: domain
          in: path
          description: A valid domain name (no protocol).
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/mm-config:
    post:
      description: Updates matchmaker config for the given game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceMatchmakerConfig
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigRequest
  /games/{game_id}/namespaces/{namespace_id}/version-history:
    get:
      description: Gets the version history for a given namespace.
      operationId: cloud_games_namespaces_GetGameNamespaceVersionHistoryList
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: How many items to offset the search by.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Amount of items to return. Must be between 1 and 32 inclusive.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetGameNamespaceVersionHistoryResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/mm-config/validate:
    post:
      description: >-
        Validates information used to update a game namespace's matchmaker
        config.
      operationId: cloud_games_namespaces_validateGameNamespaceMatchmakerConfig
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigRequest
  /games/{game_id}/namespaces/{namespace_id}/tokens/development:
    post:
      description: Creates a development token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenDevelopment
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentRequest
  /games/{game_id}/namespaces/{namespace_id}/tokens/development/validate:
    post:
      description: >-
        Validates information used to create a new game namespace development
        token.
      operationId: cloud_games_namespaces_validateGameNamespaceTokenDevelopment
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentRequest
  /games/{game_id}/namespaces/{namespace_id}/tokens/public:
    post:
      description: Creates a public token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenPublic
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenPublicResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/version:
    put:
      description: Updates the version of a game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceVersion
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateGameNamespaceVersionRequest
  /groups:
    get:
      description: Returns a list of suggested groups.
      operationId: group_listSuggested
      tags:
        - Group
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListSuggestedResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new group.
      operationId: group_create
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateRequest'
  /groups/avatar-upload/prepare:
    post:
      description: |-
        Prepares an avatar image upload.
        Complete upload with `rivet.api.group#CompleteAvatarUpload`.
      operationId: group_prepareAvatarUpload
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPrepareAvatarUploadResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPrepareAvatarUploadRequest'
  /groups/profile/validate:
    post:
      description: >-
        Validate contents of group profile. Use to provide immediate feedback on
        profile changes before committing them.
      operationId: group_validateProfile
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupValidateProfileResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupValidateProfileRequest'
  /groups/search:
    get:
      description: Fuzzy search for groups.
      operationId: group_search
      tags:
        - Group
      parameters:
        - name: query
          in: query
          description: The query to match group display names against.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Unsigned 32 bit integer.
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/avatar-upload/{upload_id}/complete:
    post:
      description: |-
        Completes an avatar image upload. Must be called after the file upload
        process completes.
        Call `rivet.api.group#PrepareAvatarUpload` first.
      operationId: group_completeAvatarUpload
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/bans:
    get:
      description: Returns a group's bans. Must have valid permissions to view.
      operationId: group_getBans
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of bans to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetBansResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/bans/{identity_id}:
    post:
      description: >-
        Bans an identity from a group. Must be the owner of the group to perform
        this action. The banned identity will no longer be able to create a join
        request or use a group invite.
      operationId: group_banIdentity
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    delete:
      description: >-
        Unbans an identity from a group. Must be the owner of the group to
        perform this action.
      operationId: group_unbanIdentity
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/join-requests:
    get:
      description: Returns a group's join requests. Must have valid permissions to view.
      operationId: group_getJoinRequests
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of join requests to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetJoinRequestsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/kick/{identity_id}:
    post:
      description: >-
        Kicks an identity from a group. Must be the owner of the group to
        perform this action.
      operationId: group_kickMember
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/leave:
    post:
      description: Leaves a group.
      operationId: group_leave
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/members:
    get:
      description: Returns a group's members.
      operationId: group_getMembers
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of members to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetMembersResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/profile:
    get:
      description: Returns a group profile.
      operationId: group_getProfile
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetProfileResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    post:
      operationId: group_updateProfile
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateProfileRequest'
  /groups/{group_id}/summary:
    get:
      operationId: group_getSummary
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetSummaryResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/transfer-owner:
    post:
      description: Transfers ownership of a group to another identity.
      operationId: group_transferOwnership
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupTransferOwnershipRequest'
  /identities:
    post:
      description: >-
        Gets or creates an identity.

        Passing an existing identity token in the body refreshes the token.

        Temporary Accounts

        Until the identity is linked with the Rivet Hub (see `PrepareGameLink`),
        this identity will be temporary but still behave like all other
        identities.

        This is intended to allow users to play the game without signing up
        while still having the benefits of having an account. When they are
        ready to save their account, they should be instructed to link their
        account (see `PrepareGameLink`).

        Storing Token

        `identity_token` should be stored in some form of persistent storage.
        The token should be read from storage and passed to `Setup` every time
        the client starts.
      operationId: identity_setup
      tags:
        - Identity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySetupResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                existing_identity_token:
                  $ref: '#/components/schemas/Jwt'
  /identities/{identity_id}/profile:
    get:
      description: Fetches an identity profile.
      operationId: identity_getProfile
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/profile:
    get:
      description: Fetches the current identity's profile.
      operationId: identity_getSelfProfile
      tags:
        - Identity
      parameters:
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Updates profile of the current identity.
      operationId: identity_updateProfile
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  $ref: '#/components/schemas/DisplayName'
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
  /identities/batch/handle:
    get:
      description: Fetches a list of identity handles.
      operationId: identity_getHandles
      tags:
        - Identity
      parameters:
        - name: identity_ids
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetHandlesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/batch/summary:
    get:
      description: Fetches a list of identity summaries.
      operationId: identity_getSummaries
      tags:
        - Identity
      parameters:
        - name: identity_ids
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetSummariesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/profile/validate:
    post:
      description: >-
        Validate contents of identity profile. Use to provide immediate feedback
        on profile changes before committing them.
      operationId: identity_validateProfile
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  $ref: '#/components/schemas/DisplayName'
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
  /identities/search:
    get:
      description: Fuzzy search for identities.
      operationId: identity_search
      tags:
        - Identity
      parameters:
        - name: query
          in: query
          description: >-
            The query to match identity display names and account numbers
            against.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: How many identities to offset the search by.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Amount of identities to return. Must be between 1 and 32 inclusive.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySearchResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/activity:
    post:
      description: >-
        Sets the current identity's game activity. This activity will
        automatically be removed when the identity goes offline.
      operationId: identity_setGameActivity
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_activity:
                  $ref: '#/components/schemas/IdentityUpdateGameActivity'
              required:
                - game_activity
    delete:
      description: Removes the current identity's game activity.
      operationId: identity_removeGameActivity
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/identities/self/status:
    post:
      description: Updates the current identity's status.
      operationId: identity_updateStatus
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/IdentityStatus'
              required:
                - status
  /identities/{identity_id}/follow:
    post:
      description: >-
        Follows the given identity. In order for identities to be "friends", the
        other identity has to also follow this identity.
      operationId: identity_follow
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    delete:
      description: Unfollows the given identity.
      operationId: identity_unfollow
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/avatar-upload/prepare:
    post:
      description: >-
        Prepares an avatar image upload. Complete upload with
        `CompleteIdentityAvatarUpload`.
      operationId: identity_prepareAvatarUpload
      tags:
        - Identity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareAvatarUploadResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                mime:
                  type: string
                  description: >-
                    See
                    https://www.iana.org/assignments/media-types/media-types.xhtml
                content_length:
                  type: integer
                  format: int64
              required:
                - path
                - mime
                - content_length
  /identities/avatar-upload/{upload_id}/complete:
    post:
      description: >-
        Completes an avatar image upload. Must be called after the file upload
        process completes.
      operationId: identity_completeAvatarUpload
      tags:
        - Identity
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/beta-signup:
    post:
      description: >-
        Completes an avatar image upload. Must be called after the file upload
        process completes.
      operationId: identity_signupForBeta
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                company_name:
                  type: string
                company_size:
                  type: string
                preferred_tools:
                  type: string
                goals:
                  type: string
              required:
                - name
                - company_size
                - preferred_tools
                - goals
  /identities/{identity_id}/report:
    post:
      description: Creates an abuse report for an identity.
      operationId: identity_report
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
  /identities/{identity_id}/followers:
    get:
      operationId: identity_listFollowers
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFollowersResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/{identity_id}/following:
    get:
      operationId: identity_listFollowing
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFollowingResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/friends:
    get:
      operationId: identity_listFriends
      tags:
        - Identity
      parameters:
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFriendsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/{identity_id}/mutual-friends:
    get:
      operationId: identity_listMutualFriends
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListMutualFriendsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/recent-followers:
    get:
      operationId: identity_listRecentFollowers
      tags:
        - Identity
      parameters:
        - name: count
          in: query
          required: false
          schema:
            type: integer
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListRecentFollowersResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/recent-followers/{identity_id}/ignore:
    post:
      operationId: identity_ignoreRecentFollower
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/delete-request:
    post:
      operationId: identity_markDeletion
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    delete:
      operationId: identity_unmarkDeletion
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /entries:
    get:
      description: Returns a specific key-value entry by key.
      operationId: kv_get
      tags:
        - Kv
      parameters:
        - name: key
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/KvKey'
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
        - name: namespace_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
    put:
      description: Puts (sets or overwrites) a key-value entry by key.
      operationId: kv_put
      tags:
        - Kv
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutRequest'
    delete:
      description: Deletes a key-value entry by key.
      operationId: kv_delete
      tags:
        - Kv
      parameters:
        - name: key
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/KvKey'
        - name: namespace_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
  /entries/batch:
    get:
      description: Gets multiple key-value entries by key(s).
      operationId: kv_getBatch
      tags:
        - Kv
      parameters:
        - name: keys
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/KvKey'
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
        - name: namespace_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetBatchResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
    put:
      description: Puts (sets or overwrites) multiple key-value entries by key(s).
      operationId: kv_putBatch
      tags:
        - Kv
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutBatchRequest'
    delete:
      description: Deletes multiple key-value entries by key(s).
      operationId: kv_deleteBatch
      tags:
        - Kv
      parameters:
        - name: keys
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/KvKey'
        - name: namespace_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
  /modules/{module}/scripts/{script}/call:
    post:
      description: |
        Makes a request to a module's script.
      operationId: module_call
      tags:
        - Module
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
        - name: script
          in: path
          required: true
          schema:
            type: string
        - name: origin
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleCallResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://module.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace_id:
                  type: string
                  format: uuid
                data: {}
              required:
                - data
  /identities/{identity_id}/thread:
    get:
      description: Returns a thread ID with a given identity.
      operationId: chat_identity_getDirectThread
      tags:
        - ChatIdentity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetDirectThreadResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /auth/inspect:
    get:
      description: Returns information about the current authenticated agent.
      operationId: cloud_auth_inspect
      tags:
        - CloudAuth
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudInspectResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /devices/links:
    post:
      operationId: cloud_devices_links_prepare
      tags:
        - CloudDevicesLinks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesPrepareDeviceLinkResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
    get:
      operationId: cloud_devices_links_get
      tags:
        - CloudDevicesLinks
      parameters:
        - name: device_link_token
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Jwt'
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesGetDeviceLinkResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
  /games/{game_id}/avatars:
    get:
      description: Lists custom avatars for the given game.
      operationId: cloud_games_avatars_listGameCustomAvatars
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCustomAvatarsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/prepare:
    post:
      description: |-
        Prepares a custom avatar image upload.
        Complete upload with `rivet.api.cloud#CompleteCustomAvatarUpload`.
      operationId: cloud_games_avatars_prepareCustomAvatarUpload
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesPrepareCustomAvatarUploadResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesPrepareCustomAvatarUploadRequest'
  /games/{game_id}/avatar-upload/{upload_id}/complete:
    post:
      description: >-
        Completes a custom avatar image upload. Must be called after the file
        upload process completes.
      operationId: cloud_games_avatars_completeCustomAvatarUpload
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/builds:
    get:
      description: Lists game builds for the given game.
      operationId: cloud_games_builds_listGameBuilds
      tags:
        - CloudGamesBuilds
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameBuildsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new game build for the given game.
      operationId: cloud_games_builds_createGameBuild
      tags:
        - CloudGamesBuilds
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameBuildResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameBuildRequest'
  /games/{game_id}/cdn/sites:
    get:
      description: Lists CDN sites for a game.
      operationId: cloud_games_cdn_listGameCdnSites
      tags:
        - CloudGamesCdn
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCdnSitesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new CDN site for the given game.
      operationId: cloud_games_cdn_createGameCdnSite
      tags:
        - CloudGamesCdn
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteRequest'
  /games:
    get:
      description: >-
        Returns a list of games in which the current identity is a group member
        of its development team.
      operationId: cloud_games_games_getGames
      tags:
        - CloudGamesGames
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGamesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new game.
      operationId: cloud_games_games_createGame
      tags:
        - CloudGamesGames
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameRequest'
  /games/validate:
    post:
      description: Validates information used to create a new game.
      operationId: cloud_games_games_validateGame
      tags:
        - CloudGamesGames
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameRequest'
  /games/{game_id}:
    get:
      description: Returns a game by its game id.
      operationId: cloud_games_games_getGameById
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameByIdResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/banner-upload/prepare:
    post:
      description: Prepares a game banner image upload.
      operationId: cloud_games_games_gameBannerUploadPrepare
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareRequest'
  /games/{game_id}/banner-upload/{upload_id}/complete:
    post:
      description: >-
        Completes an game banner image upload. Must be called after the file
        upload process completes.
      operationId: cloud_games_games_gameBannerUploadComplete
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/logo-upload/prepare:
    post:
      description: Prepares a game logo image upload.
      operationId: cloud_games_games_gameLogoUploadPrepare
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareRequest'
  /games/{game_id}/logo-upload/{upload_id}/complete:
    post:
      description: >-
        Completes a game logo image upload. Must be called after the file upload
        process completes.
      operationId: cloud_games_games_gameLogoUploadComplete
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/export-history:
    post:
      description: Exports lobby history over a given query time span.
      operationId: cloud_games_matchmaker_exportMatchmakerLobbyHistory
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesExportMatchmakerLobbyHistoryResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesExportMatchmakerLobbyHistoryRequest
  /games/{game_id}/matchmaker/lobbies/{lobby_id}:
    delete:
      description: Deletes a matchmaker lobby, stopping it immediately.
      operationId: cloud_games_matchmaker_deleteMatchmakerLobby
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lobby_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesDeleteMatchmakerLobbyResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/{lobby_id}/logs:
    get:
      description: Returns the logs for a given lobby.
      operationId: cloud_games_matchmaker_getLobbyLogs
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lobby_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: stream
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CloudGamesLogStream'
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetLobbyLogsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/{lobby_id}/logs/export:
    post:
      description: Generates a download URL for logs.
      operationId: cloud_games_matchmaker_exportLobbyLogs
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lobby_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesExportLobbyLogsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesExportLobbyLogsRequest'
  /games/{game_id}/namespaces/{namespace_id}/analytics/matchmaker/live:
    get:
      description: Returns live information about all active lobbies for a given namespace.
      operationId: cloud_games_namespaces_analytics_getAnalyticsMatchmakerLive
      tags:
        - CloudGamesNamespacesAnalytics
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetAnalyticsMatchmakerLiveResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/logs/lobbies:
    get:
      description: Returns a list of lobbies for the given game namespace.
      operationId: cloud_games_namespaces_logs_listNamespaceLobbies
      tags:
        - CloudGamesNamespacesLogs
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: before_create_ts
          in: query
          description: Returns lobbies created before this timestamp.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesListNamespaceLobbiesResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/logs/lobbies/{lobby_id}:
    get:
      description: Returns a lobby from the given game namespace.
      operationId: cloud_games_namespaces_logs_getNamespaceLobby
      tags:
        - CloudGamesNamespacesLogs
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: namespace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lobby_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetNamespaceLobbyResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/tokens/cloud:
    post:
      description: Creates a new game cloud token.
      operationId: cloud_games_tokens_createCloudToken
      tags:
        - CloudGamesTokens
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateCloudTokenResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/versions:
    post:
      description: Creates a new game version.
      operationId: cloud_games_versions_createGameVersion
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameVersionResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameVersionRequest'
  /games/{game_id}/versions/validate:
    post:
      description: Validates information used to create a new game version.
      operationId: cloud_games_versions_validateGameVersion
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameVersionResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameVersionRequest'
  /games/{game_id}/versions/{version_id}:
    get:
      description: Returns a game version by its version ID.
      operationId: cloud_games_versions_getGameVersionById
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameVersionByIdResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/validate:
    post:
      description: Validates information used to create a new group.
      operationId: cloud_groups_validate
      tags:
        - CloudGroups
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudValidateGroupResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudValidateGroupRequest'
  /groups/{group_id}/convert:
    post:
      description: Converts the given group into a developer group.
      operationId: cloud_groups_convertGroup
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /rays/{ray_id}/perf:
    get:
      description: Returns performance information about a Rivet Ray.
      operationId: cloud_logs_getRayPerfLogs
      tags:
        - CloudLogs
      parameters:
        - name: ray_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRayPerfLogsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /region-tiers:
    get:
      description: Returns all available region tiers.
      operationId: cloud_tiers_getRegionTiers
      tags:
        - CloudTiers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRegionTiersResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /uploads/{upload_id}/complete:
    post:
      description: Marks an upload as complete.
      operationId: cloud_uploads_completeUpload
      tags:
        - CloudUploads
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /invites/{group_invite_code}:
    get:
      description: >-
        Inspects a group invite returning information about the team that
        created it.
      operationId: group_invites_getInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_invite_code
          in: path
          description: Provided by `rivet.api.group#CreateInviteResponse$code`.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetInviteResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /invites/{group_invite_code}/consume:
    post:
      description: Consumes a group invite to join a group.
      operationId: group_invites_consumeInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_invite_code
          in: path
          description: Provided by `rivet.api.group#CreateInviteResponse$code`.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupConsumeInviteResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/invites:
    post:
      description: >-
        Creates a group invite. Can be shared with other identities to let them
        join this group.
      operationId: group_invites_createInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateInviteResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateInviteRequest'
  /groups/{group_id}/join-request:
    post:
      description: Requests to join a group.
      operationId: group_joinRequests_createJoinRequest
      tags:
        - GroupJoinRequests
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/join-request/{identity_id}:
    post:
      description: Resolves a join request for a given group.
      operationId: group_joinRequests_resolveJoinRequest
      tags:
        - GroupJoinRequests
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupResolveJoinRequestRequest'
  /events/live:
    get:
      description: Returns all events relative to the current identity.
      operationId: identity_events_watch
      tags:
        - IdentityEvents
      parameters:
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityWatchEventsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /game-links:
    post:
      description: >
        Begins the process for linking an identity with the Rivet Hub.

        # Importance of Linking Identities

        When an identity is created via `rivet.api.identity#SetupIdentity`, the
        identity is temporary

        and is not shared with other games the user plays.

        In order to make the identity permanent and synchronize the identity
        with

        other games, the identity must be linked with the hub.

        # Linking Process

        The linking process works by opening `identity_link_url` in a browser
        then polling

        `rivet.api.identity#GetGameLink` to wait for it to complete.

        This is designed to be as flexible as possible so `identity_link_url`
        can be opened

        on any device. For example, when playing a console game, the user can
        scan a

        QR code for `identity_link_url` to authenticate on their phone.
      operationId: identity_links_prepare
      tags:
        - IdentityLinks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareGameLinkResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    get:
      description: >-
        Returns the current status of a linking process. Once `status` is
        `complete`, the identity's profile should be fetched again since they
        may have switched accounts.
      operationId: identity_links_get
      tags:
        - IdentityLinks
      parameters:
        - name: identity_link_token
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Jwt'
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetGameLinkResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /lobbies/ready:
    post:
      description: >-
        Marks the current lobby as ready to accept connections.  Players will
        not be able to connect to this lobby until the  lobby is flagged as
        ready.
      operationId: matchmaker_lobbies_ready
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /lobbies/closed:
    put:
      description: >
        If `is_closed` is `true`, the matchmaker will no longer route players to
        the lobby. Players can still

        join using the /join endpoint (this can be disabled by the developer by
        rejecting all new connections

        after setting the lobby to closed).

        Does not shutdown the lobby.
      operationId: matchmaker_lobbies_setClosed
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: boolean
              required:
                - is_closed
  /lobbies/state:
    put:
      operationId: matchmaker_lobbies_setState
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: false
        content:
          application/json:
            schema: {}
  /lobbies/{lobby_id}/state:
    get:
      operationId: matchmaker_lobbies_getState
      tags:
        - MatchmakerLobbies
      parameters:
        - name: lobby_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /lobbies/find:
    post:
      description: |
        Finds a lobby based on the given criteria.
        If a lobby is not found and `prevent_auto_create_lobby` is `true`, 
        a new lobby will be created.
      operationId: matchmaker_lobbies_find
      tags:
        - MatchmakerLobbies
      parameters:
        - name: origin
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerFindLobbyResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_modes:
                  type: array
                  items:
                    type: string
                regions:
                  type: array
                  items:
                    type: string
                prevent_auto_create_lobby:
                  type: boolean
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                verification_data: {}
              required:
                - game_modes
  /lobbies/join:
    post:
      description: |
        Joins a specific lobby.
        This request will use the direct player count configured for the
        lobby group.
      operationId: matchmaker_lobbies_join
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerJoinLobbyResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lobby_id:
                  type: string
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                verification_data: {}
              required:
                - lobby_id
  /lobbies/create:
    post:
      description: |
        Creates a custom lobby.
      operationId: matchmaker_lobbies_create
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerCreateLobbyResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_mode:
                  type: string
                region:
                  type: string
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                publicity:
                  $ref: '#/components/schemas/MatchmakerCustomLobbyPublicity'
                lobby_config: {}
                verification_data: {}
              required:
                - game_mode
                - publicity
  /lobbies/list:
    get:
      description: Lists all open lobbies.
      operationId: matchmaker_lobbies_list
      tags:
        - MatchmakerLobbies
      parameters:
        - name: include_state
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListLobbiesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /players/connected:
    post:
      description: >
        Validates the player token is valid and has not already been consumed
        then

        marks the player as connected.

        # Player Tokens and Reserved Slots

        Player tokens reserve a spot in the lobby until they expire. This allows
        for

        precise matchmaking up to exactly the lobby's player limit, which is

        important for games with small lobbies and a high influx of players.

        By calling this endpoint with the player token, the player's spot is
        marked

        as connected and will not expire. If this endpoint is never called, the

        player's token will expire and this spot will be filled by another
        player.

        # Anti-Botting

        Player tokens are only issued by caling `lobbies.join`, calling
        `lobbies.find`, or

        from the `GlobalEventMatchmakerLobbyJoin` event.

        These endpoints have anti-botting measures (i.e. enforcing max player

        limits, captchas, and detecting bots), so valid player tokens provide
        some

        confidence that the player is not a bot.

        Therefore, it's important to make sure the token is valid by waiting for

        this endpoint to return OK before allowing the connected socket to do

        anything else. If this endpoint returns an error, the socket should be

        disconnected immediately.

        # How to Transmit the Player Token

        The client is responsible for acquiring the player token by caling

        `lobbies.join`, calling `lobbies.find`, or from the
        `GlobalEventMatchmakerLobbyJoin`

        event.  Beyond that, it's up to the developer how the player token is

        transmitted to the lobby.

        If using WebSockets, the player token can be transmitted as a query

        parameter.

        Otherwise, the player token will likely be automatically sent by the
        client

        once the socket opens. As mentioned above, nothing else should happen
        until

        the player token is validated.
      operationId: matchmaker_players_connected
      tags:
        - MatchmakerPlayers
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_token:
                  type: string
              required:
                - player_token
  /players/disconnected:
    post:
      description: >-
        Marks a player as disconnected. # Ghost Players If players are not
        marked as disconnected, lobbies will result with "ghost players" that
        the matchmaker thinks exist but are no longer connected to the lobby.
      operationId: matchmaker_players_disconnected
      tags:
        - MatchmakerPlayers
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_token:
                  type: string
              required:
                - player_token
  /players/statistics:
    get:
      description: Gives matchmaker statistics about the players in game.
      operationId: matchmaker_players_getStatistics
      tags:
        - MatchmakerPlayers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerGetStatisticsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /regions:
    get:
      description: >
        Returns a list of regions available to this namespace.

        Regions are sorted by most optimal to least optimal. The player's IP
        address

        is used to calculate the regions' optimality.
      operationId: matchmaker_regions_list
      tags:
        - MatchmakerRegions
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListRegionsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
components:
  schemas:
    ChatSendMessageRequest:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/ChatSendTopic'
        message_body:
          $ref: '#/components/schemas/ChatSendMessageBody'
      required:
        - topic
        - message_body
    ChatSendMessageResponse:
      type: object
      properties:
        chat_message_id:
          type: string
          format: uuid
      required:
        - chat_message_id
    ChatGetThreadHistoryResponse:
      type: object
      properties:
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: |-
            Ordered old to new.
            If querying `rivet.api.chat.common#before_and_after`, this will be
            `count * 2` long.
      required:
        - chat_messages
    ChatWatchThreadResponse:
      type: object
      properties:
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: |-
            All messages new messages posted to this thread. Ordered
            old to new.
        typing_statuses:
          type: array
          items:
            $ref: '#/components/schemas/ChatIdentityTypingStatus'
          description: All identities that are currently typing in this thread.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - chat_messages
        - watch
    ChatSetThreadReadRequest:
      type: object
      properties:
        last_read_ts:
          type: string
          format: date-time
          description: |-
            Any messages newer than this timestamp will be marked as unread.
            This should be the current timestamp (in milliseconds).
      required:
        - last_read_ts
    ChatGetThreadTopicResponse:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/ChatSimpleTopic'
      required:
        - topic
    ChatSetTypingStatusRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ChatTypingStatus'
      required:
        - status
    CloudGamesNamespacesCreateGameNamespaceRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          format: uuid
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - version_id
        - name_id
    CloudGamesNamespacesCreateGameNamespaceResponse:
      type: object
      properties:
        namespace_id:
          type: string
          format: uuid
      required:
        - namespace_id
    CloudGamesNamespacesValidateGameNamespaceRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - name_id
    CloudGamesNamespacesValidateGameNamespaceResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesGetGameNamespaceByIdResponse:
      type: object
      properties:
        namespace:
          $ref: '#/components/schemas/CloudNamespaceFull'
      required:
        - namespace
    CloudGamesNamespacesUpdateNamespaceCdnAuthUserRequest:
      type: object
      properties:
        user:
          type: string
          description: A user name.
        password:
          type: string
          description: >-
            A bcrypt encrypted password. An error is returned if the given
            string is not properly encrypted.
      required:
        - user
        - password
    CloudGamesNamespacesSetNamespaceCdnAuthTypeRequest:
      type: object
      properties:
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
      required:
        - auth_type
    CloudGamesNamespacesToggleNamespaceDomainPublicAuthRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether or not to enable authentication based on domain.
      required:
        - enabled
    CloudGamesNamespacesAddNamespaceDomainRequest:
      type: object
      properties:
        domain:
          type: string
          description: A valid domain name (no protocol).
      required:
        - domain
    CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigRequest:
      type: object
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players
    CloudGamesNamespacesGetGameNamespaceVersionHistoryResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/CloudNamespaceVersion'
          description: A list of previously deployed namespace versions.
      required:
        - versions
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigRequest:
      type: object
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentRequest:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname used for the token.
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudMatchmakerDevelopmentPort'
        lobby_ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
          description: |-
            **Deprecated**
            A list of docker ports.
      required:
        - hostname
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentResponse:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentRequest:
      type: object
      properties:
        hostname:
          type: string
        lobby_ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
          description: A list of docker ports.
      required:
        - hostname
        - lobby_ports
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesCreateGameNamespaceTokenPublicResponse:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesNamespacesUpdateGameNamespaceVersionRequest:
      type: object
      properties:
        version_id:
          type: string
          format: uuid
      required:
        - version_id
    CloudVersionConfig:
      type: object
      description: Cloud configuration for a given version.
      properties:
        engine:
          $ref: '#/components/schemas/CloudVersionEngineConfig'
        cdn:
          $ref: '#/components/schemas/CloudVersionCdnConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudVersionMatchmakerConfig'
        kv:
          $ref: '#/components/schemas/CloudVersionKvConfig'
        identity:
          $ref: '#/components/schemas/CloudVersionIdentityConfig'
    CloudVersionFull:
      type: object
      description: A full version.
      properties:
        version_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - version_id
        - create_ts
        - display_name
        - config
    CloudVersionSummary:
      type: object
      description: A version summary.
      properties:
        version_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - version_id
        - create_ts
        - display_name
    CloudVersionCdnConfig:
      type: object
      description: CDN configuration for a given version.
      properties:
        build_command:
          type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        build_output:
          type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        site_id:
          type: string
          format: uuid
        routes:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnRoute'
          description: Multiple CDN version routes.
    CloudVersionCdnRoute:
      type: object
      properties:
        glob:
          type: string
        priority:
          type: integer
          description: Unsigned 32 bit integer.
        middlewares:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnMiddleware'
          description: Multiple CDN version middleware.
      required:
        - glob
        - priority
        - middlewares
    CloudVersionCdnMiddleware:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/CloudVersionCdnMiddlewareKind'
      required:
        - kind
    CloudVersionCdnMiddlewareKind:
      type: object
      properties:
        custom_headers:
          $ref: '#/components/schemas/CloudVersionCdnCustomHeadersMiddleware'
    CloudVersionCdnCustomHeadersMiddleware:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnHeader'
      required:
        - headers
    CloudVersionCdnHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    CloudVersionEngineConfig:
      type: object
      properties:
        unity:
          $ref: '#/components/schemas/CloudVersionEngineUnityConfig'
        unreal:
          $ref: '#/components/schemas/CloudVersionEngineUnrealConfig'
        godot:
          $ref: '#/components/schemas/CloudVersionEngineGodotConfig'
        html5:
          $ref: '#/components/schemas/CloudVersionEngineHtml5Config'
    CloudVersionKvConfig:
      type: object
      description: KV configuration for a given version.
      properties: {}
    CloudVersionMatchmakerConfig:
      type: object
      description: Matchmaker configuration for a given version.
      properties:
        game_modes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameMode'
          description: A list of game modes.
        captcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptcha'
        dev_hostname:
          type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        regions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
        lobby_groups:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroup'
          description: |-
            **Deprecated: use `game_modes` instead**
            A list of game modes.
    GroupListSuggestedResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupSummary'
          description: A list of group summaries.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - groups
        - watch
    GroupCreateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - display_name
    GroupCreateResponse:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
      required:
        - group_id
    GroupPrepareAvatarUploadRequest:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the group avatar.
        mime:
          type: string
          description: The MIME type of the group avatar.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
    GroupPrepareAvatarUploadResponse:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    GroupValidateProfileRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        bio:
          type: string
          description: Detailed information about a profile.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
    GroupValidateProfileResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    GroupSearchResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupHandle'
          description: A list of group handles.
        anchor:
          type: string
      required:
        - groups
    GroupGetBansResponse:
      type: object
      properties:
        banned_identities:
          type: array
          items:
            $ref: '#/components/schemas/GroupBannedIdentity'
          description: A list of banned group members.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - banned_identities
        - watch
    GroupGetJoinRequestsResponse:
      type: object
      properties:
        join_requests:
          type: array
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          description: A list of group join requests.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - join_requests
        - watch
    GroupGetMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMember'
          description: A list of group members.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - members
        - watch
    GroupGetProfileResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - group
        - watch
    GroupUpdateProfileRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        bio:
          type: string
          description: Detailed information about a profile.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
    GroupGetSummaryResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupSummary'
      required:
        - group
    GroupTransferOwnershipRequest:
      type: object
      properties:
        new_owner_identity_id:
          type: string
          description: |-
            Identity to transfer the group to.
            Must be a member of the group.
      required:
        - new_owner_identity_id
    IdentitySetupResponse:
      type: object
      properties:
        identity_token:
          $ref: '#/components/schemas/Jwt'
          description: >
            Token used to authenticate the identity. 

            Should be stored somewhere permanent. 

            Pass this to `rivet.api.identity#Setup$existing_identity_token` next
            time `rivet.api.identity#Setup` is called. 

            Token has a 90 day TTL. 

            This means that if `rivet.api.identity#Setup` is not called again
            within 90 days, the token will no longer be valid. 

            If this happens, the user can recover their account through the
            linking process (see `rivet.api.identity#PrepareGameLink`). 

            This token should be stored locally and never sent to a server or
            another device. 

            If this token is compromised, anyone with access to this token has
            control of the identity.
        identity_token_expire_ts:
          type: string
          format: date-time
          description: >
            If this token is comprimised, anyone with access to this token has
            control of the identity.
        identity:
          $ref: '#/components/schemas/IdentityProfile'
          description: |
            Information about the identity that was just authenticated.
        game_id:
          type: string
          format: uuid
      required:
        - identity_token
        - identity_token_expire_ts
        - identity
        - game_id
    IdentityGetProfileResponse:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identity
        - watch
    IdentityGetHandlesResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentityGetSummariesResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentitySummary'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentitySearchResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
          description: |
            The pagination anchor.
      required:
        - identities
    IdentityPrepareAvatarUploadResponse:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    IdentityListFollowersResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentityListFollowingResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentityListRecentFollowersResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentityListFriendsResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identities
        - watch
    IdentityListMutualFriendsResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
      required:
        - identities
    KvGetResponse:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/KvValue'
        deleted:
          type: boolean
          description: >-
            Whether or not the entry has been deleted. Only set when watching
            this endpoint.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - value
        - watch
    KvPutRequest:
      type: object
      properties:
        namespace_id:
          type: string
          format: uuid
        key:
          $ref: '#/components/schemas/KvKey'
        value:
          $ref: '#/components/schemas/KvValue'
      required:
        - key
        - value
    KvGetBatchResponse:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/KvEntry'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - entries
        - watch
    KvPutBatchRequest:
      type: object
      properties:
        namespace_id:
          type: string
          format: uuid
        entries:
          type: array
          items:
            $ref: '#/components/schemas/KvPutEntry'
      required:
        - entries
    ModuleCallResponse:
      type: object
      properties:
        data: {}
      required:
        - data
    CaptchaConfig:
      type: object
      description: Methods to verify a captcha
      properties:
        hcaptcha:
          $ref: '#/components/schemas/CaptchaConfigHcaptcha'
        turnstile:
          $ref: '#/components/schemas/CaptchaConfigTurnstile'
    CaptchaConfigHcaptcha:
      type: object
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
        - client_response
    CaptchaConfigTurnstile:
      type: object
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
        - client_response
    ChatSendTopic:
      type: object
      description: Topic to send a chat message to.
      properties:
        thread_id:
          type: string
          format: uuid
        group_id:
          type: string
          format: uuid
        identity_id:
          type: string
          format: uuid
    ChatSendMessageBody:
      type: object
      description: Data to send in a chat message.
      properties:
        text:
          $ref: '#/components/schemas/ChatSendMessageBodyText'
    ChatSendMessageBodyText:
      type: object
      description: The text in the text message.
      properties:
        body:
          type: string
      required:
        - body
    ChatQueryDirection:
      type: string
      enum:
        - before
        - after
        - before_and_after
    ChatThread:
      type: object
      description: A chat thread
      properties:
        thread_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
        topic:
          $ref: '#/components/schemas/ChatTopic'
        tail_message:
          $ref: '#/components/schemas/ChatMessage'
        last_read_ts:
          type: string
          format: date-time
        unread_count:
          type: integer
          format: int64
        external:
          $ref: '#/components/schemas/ChatThreadExternalLinks'
      required:
        - thread_id
        - create_ts
        - topic
        - last_read_ts
        - unread_count
        - external
    ChatMessage:
      type: object
      properties:
        chat_message_id:
          type: string
          format: uuid
        thread_id:
          type: string
          format: uuid
        send_ts:
          type: string
          format: date-time
        body:
          $ref: '#/components/schemas/ChatMessageBody'
      required:
        - chat_message_id
        - thread_id
        - send_ts
        - body
    ChatMessageBody:
      type: object
      description: Represents types of chat message bodies.
      properties:
        text:
          $ref: '#/components/schemas/ChatMessageBodyText'
        chat_create:
          $ref: '#/components/schemas/ChatMessageBodyChatCreate'
        deleted:
          $ref: '#/components/schemas/ChatMessageBodyDeleted'
        identity_follow:
          $ref: '#/components/schemas/ChatMessageBodyIdentityFollow'
        group_join:
          $ref: '#/components/schemas/ChatMessageBodyGroupJoin'
        group_leave:
          $ref: '#/components/schemas/ChatMessageBodyGroupLeave'
        group_member_kick:
          $ref: '#/components/schemas/ChatMessageBodyGroupMemberKick'
    ChatMessageBodyText:
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/IdentityHandle'
        body:
          type: string
      required:
        - sender
        - body
    ChatMessageBodyChatCreate:
      type: object
      properties: {}
    ChatMessageBodyDeleted:
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - sender
    ChatMessageBodyIdentityFollow:
      type: object
      properties: {}
    ChatMessageBodyGroupJoin:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity
    ChatMessageBodyGroupLeave:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity
    ChatMessageBodyGroupMemberKick:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity
    ChatTopic:
      type: object
      description: Represents the topic of the given chat thread.
      properties:
        group:
          $ref: '#/components/schemas/ChatTopicGroup'
        direct:
          $ref: '#/components/schemas/ChatTopicDirect'
    ChatTopicGroup:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    ChatTopicDirect:
      type: object
      properties:
        identity_a:
          $ref: '#/components/schemas/IdentityHandle'
        identity_b:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity_a
        - identity_b
    ChatSimpleTopic:
      type: object
      description: >
        Represents a topic of the given chat thread without the associated
        handles

        for the topic.
      properties:
        group:
          $ref: '#/components/schemas/ChatSimpleTopicGroup'
        direct:
          $ref: '#/components/schemas/ChatSimpleTopicDirect'
    ChatSimpleTopicGroup:
      type: object
      properties:
        group:
          type: string
          format: uuid
      required:
        - group
    ChatSimpleTopicDirect:
      type: object
      properties:
        identity_a:
          type: string
          format: uuid
        identity_b:
          type: string
          format: uuid
      required:
        - identity_a
        - identity_b
    ChatThreadExternalLinks:
      type: object
      properties:
        chat:
          type: string
      required:
        - chat
    ChatTypingStatus:
      type: object
      properties:
        idle:
          $ref: '#/components/schemas/EmptyObject'
          description: Not typing
        typing:
          $ref: '#/components/schemas/EmptyObject'
          description: Typing
    ChatIdentityTypingStatus:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        status:
          $ref: '#/components/schemas/ChatTypingStatus'
      required:
        - identity
        - status
    ChatGetDirectThreadResponse:
      type: object
      properties:
        thread_id:
          type: string
          format: uuid
        identity:
          $ref: '#/components/schemas/IdentityHandle'
    CloudInspectResponse:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/CloudAuthAgent'
      required:
        - agent
    CloudSvcPerf:
      type: object
      description: A service performance summary.
      properties:
        svc_name:
          type: string
          description: The name of the service.
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        duration:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        req_id:
          type: string
          format: uuid
        spans:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsPerfSpan'
          description: A list of performance spans.
        marks:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsPerfMark'
          description: A list of performance marks.
      required:
        - svc_name
        - ts
        - duration
        - spans
        - marks
    CloudLogsPerfSpan:
      type: object
      description: A performance span.
      properties:
        label:
          type: string
          description: The label given to this performance span.
        start_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        finish_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        req_id:
          type: string
          format: uuid
      required:
        - label
        - start_ts
    CloudLogsPerfMark:
      type: object
      description: A performance mark.
      properties:
        label:
          type: string
          description: The label given to this performance mark.
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        ray_id:
          type: string
          format: uuid
        req_id:
          type: string
          format: uuid
      required:
        - label
        - ts
    CloudLobbySummaryAnalytics:
      type: object
      description: Analytical information about a lobby.
      properties:
        lobby_id:
          type: string
          format: uuid
        lobby_group_id:
          type: string
          format: uuid
        lobby_group_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        region_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        is_ready:
          type: boolean
          description: Whether or not this lobby is ready.
        is_idle:
          type: boolean
          description: Whether or not this lobby is idle.
        is_closed:
          type: boolean
          description: Whether or not this lobby is in a closed state.
        is_outdated:
          type: boolean
          description: Whether or not this lobby is outdated.
        max_players_normal:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_direct:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_party:
          type: integer
          description: Unsigned 32 bit integer.
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        registered_player_count:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_id
        - lobby_group_id
        - lobby_group_name_id
        - region_id
        - create_ts
        - is_ready
        - is_idle
        - is_closed
        - is_outdated
        - max_players_normal
        - max_players_direct
        - max_players_party
        - total_player_count
        - registered_player_count
    CloudLogsLobbySummary:
      type: object
      description: A logs summary for a lobby.
      properties:
        lobby_id:
          type: string
          format: uuid
        namespace_id:
          type: string
          format: uuid
        lobby_group_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        region_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        start_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        ready_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        status:
          $ref: '#/components/schemas/CloudLogsLobbyStatus'
      required:
        - lobby_id
        - namespace_id
        - lobby_group_name_id
        - region_id
        - create_ts
        - status
    CloudLogsLobbyStatus:
      type: object
      description: A union representing the state of a lobby.
      properties:
        running:
          $ref: '#/components/schemas/EmptyObject'
        stopped:
          $ref: '#/components/schemas/CloudLogsLobbyStatusStopped'
      required:
        - running
    CloudLogsLobbyStatusStopped:
      type: object
      description: The status of a stopped lobby.
      properties:
        stop_ts:
          type: string
          format: date-time
        failed:
          type: boolean
          description: Whether or not the lobby failed or stopped successfully.
        exit_code:
          type: integer
          description: The exit code returned by the lobby's main process when stopped.
      required:
        - stop_ts
        - failed
        - exit_code
    CloudSvcMetrics:
      type: object
      description: Metrics relating to a job service.
      properties:
        job:
          type: string
          description: The job name.
        cpu:
          type: array
          items:
            type: number
            format: double
          description: CPU metrics.
        memory:
          type: array
          items:
            type: number
            format: double
          description: Memory metrics.
        memory_max:
          type: array
          items:
            type: number
            format: double
          description: Peak memory metrics.
        allocated_memory:
          type: number
          format: double
          description: Total allocated memory (MB).
      required:
        - job
        - cpu
        - memory
        - memory_max
    CloudAuthAgent:
      type: object
      description: The current authenticated agent.
      properties:
        identity:
          $ref: '#/components/schemas/CloudAuthAgentIdentity'
        game_cloud:
          $ref: '#/components/schemas/CloudAuthAgentGameCloud'
    CloudAuthAgentIdentity:
      type: object
      description: The current authenticated identity.
      properties:
        identity_id:
          type: string
          format: uuid
      required:
        - identity_id
    CloudAuthAgentGameCloud:
      type: object
      description: The current authenticated game cloud.
      properties:
        game_id:
          type: string
          format: uuid
      required:
        - game_id
    CloudCustomAvatarSummary:
      type: object
      description: A custom avatar summary.
      properties:
        upload_id:
          type: string
          format: uuid
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        url:
          type: string
          description: >-
            The URL of this custom avatar image. Only present if upload is
            complete.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this custom avatar has completely been uploaded.
      required:
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudBuildSummary:
      type: object
      description: A build summary.
      properties:
        build_id:
          type: string
          format: uuid
        upload_id:
          type: string
          format: uuid
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this build has completely been uploaded.
      required:
        - build_id
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudCdnSiteSummary:
      type: object
      description: A CDN site summary.
      properties:
        site_id:
          type: string
          format: uuid
        upload_id:
          type: string
          format: uuid
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this site has completely been uploaded.
      required:
        - site_id
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudGameFull:
      type: object
      description: A full game.
      properties:
        game_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          format: uuid
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        logo_url:
          type: string
          description: The URL of this game's logo image.
        banner_url:
          type: string
          description: The URL of this game's banner image.
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/CloudNamespaceSummary'
          description: A list of namespace summaries.
        versions:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionSummary'
          description: A list of version summaries.
        available_regions:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionSummary'
          description: A list of region summaries.
      required:
        - game_id
        - create_ts
        - name_id
        - display_name
        - developer_group_id
        - total_player_count
        - namespaces
        - versions
        - available_regions
    CloudNamespaceSummary:
      type: object
      description: A namespace summary.
      properties:
        namespace_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          format: uuid
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - namespace_id
        - create_ts
        - display_name
        - version_id
        - name_id
    CloudRegionSummary:
      type: object
      description: A region summary.
      properties:
        region_id:
          type: string
          format: uuid
        region_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        provider:
          type: string
          description: The server provider of this region.
        universal_region:
          type: number
          format: double
          description: A universal number given to this region.
        provider_display_name:
          type: string
          description: Represent a resource's readable display name.
        region_display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - region_id
        - region_name_id
        - provider
        - universal_region
        - provider_display_name
        - region_display_name
    CloudRegionTier:
      type: object
      description: A region server tier.
      properties:
        tier_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        rivet_cores_numerator:
          type: integer
          description: >-
            Together with the denominator, denotes the portion of the CPU a
            given server uses.
        rivet_cores_denominator:
          type: integer
          description: >-
            Together with the numerator, denotes the portion of the CPU a given
            server uses.
        cpu:
          type: integer
          description: CPU frequency (MHz).
        memory:
          type: integer
          description: Allocated memory (MB).
        disk:
          type: integer
          description: Allocated disk space (MB).
        bandwidth:
          type: integer
          description: Internet bandwidth (MB).
        price_per_second:
          type: integer
          description: >-
            Price billed for every second this server is running (in
            quadrillionth USD, 1,000,000,000,000 = $1.00).
      required:
        - tier_name_id
        - rivet_cores_numerator
        - rivet_cores_denominator
        - cpu
        - memory
        - disk
        - bandwidth
        - price_per_second
    CloudNamespaceFull:
      type: object
      description: A full namespace.
      properties:
        namespace_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          format: uuid
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        config:
          $ref: '#/components/schemas/CloudNamespaceConfig'
      required:
        - namespace_id
        - create_ts
        - display_name
        - version_id
        - name_id
        - config
    CloudNamespaceConfig:
      type: object
      description: Cloud configuration for a given namespace.
      properties:
        cdn:
          $ref: '#/components/schemas/CloudCdnNamespaceConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudMatchmakerNamespaceConfig'
        kv:
          $ref: '#/components/schemas/CloudKvNamespaceConfig'
        identity:
          $ref: '#/components/schemas/CloudIdentityNamespaceConfig'
      required:
        - cdn
        - matchmaker
        - kv
        - identity
    CloudCdnNamespaceConfig:
      type: object
      description: CDN configuration for a given namespace.
      properties:
        enable_domain_public_auth:
          type: boolean
          description: >-
            Whether or not to allow users to connect to the given namespace via
            domain name.
        domains:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceDomain'
          description: A list of CDN domains for a given namespace.
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
        auth_user_list:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceAuthUser'
          description: A list of CDN authenticated users for a given namespace.
      required:
        - enable_domain_public_auth
        - domains
        - auth_type
        - auth_user_list
    CloudMatchmakerNamespaceConfig:
      type: object
      description: Matchmaker configuration for a given namespace.
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_vpn:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_proxy:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_tor:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_hosting:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players_per_client
        - max_players_per_client_vpn
        - max_players_per_client_proxy
        - max_players_per_client_tor
        - max_players_per_client_hosting
    CloudKvNamespaceConfig:
      type: object
      description: KV configuration for a given namespace.
      properties: {}
    CloudIdentityNamespaceConfig:
      type: object
      description: Identity configuration for a given namespace.
      properties: {}
    CloudCdnAuthType:
      type: string
      enum:
        - none
        - basic
      description: >-
        A value denoting what type of authentication to use for a game
        namespace's CDN.
    CloudCdnNamespaceDomain:
      type: object
      description: A CDN domain for a given namespace.
      properties:
        domain:
          type: string
          description: A valid domain name (no protocol).
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        verification_status:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationStatus'
        verification_method:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethod'
        verification_errors:
          type: array
          items:
            type: string
      required:
        - domain
        - create_ts
        - verification_status
        - verification_method
        - verification_errors
    CloudCdnNamespaceDomainVerificationMethod:
      type: object
      description: A union representing the verification method used for this CDN domain.
      properties:
        invalid:
          $ref: '#/components/schemas/EmptyObject'
        http:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethodHttp'
    CloudCdnNamespaceDomainVerificationMethodHttp:
      type: object
      properties:
        cname_record:
          type: string
      required:
        - cname_record
    CloudCdnNamespaceDomainVerificationStatus:
      type: string
      enum:
        - active
        - pending
        - failed
      description: A value denoting the status of a CDN domain's verification status.
    CloudCdnNamespaceAuthUser:
      type: object
      description: An authenticated CDN user for a given namespace.
      properties:
        user:
          type: string
          description: A user name.
      required:
        - user
    CloudMatchmakerDevelopmentPort:
      type: object
      description: A port configuration used to create development tokens.
      properties:
        port:
          type: integer
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
      required:
        - protocol
    CloudNamespaceVersion:
      type: object
      description: A previously deployed namespace version.
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        version_id:
          type: string
          description: A universally unique identifier.
        deploy_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - namespace_id
        - version_id
        - deploy_ts
    CloudDevicesPrepareDeviceLinkResponse:
      type: object
      properties:
        device_link_id:
          type: string
          format: uuid
        device_link_token:
          type: string
        device_link_url:
          type: string
      required:
        - device_link_id
        - device_link_token
        - device_link_url
    CloudDevicesGetDeviceLinkResponse:
      type: object
      properties:
        cloud_token:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - watch
    CloudGamesListGameCustomAvatarsResponse:
      type: object
      properties:
        custom_avatars:
          type: array
          items:
            $ref: '#/components/schemas/CloudCustomAvatarSummary'
          description: A list of custom avatar summaries.
      required:
        - custom_avatars
    CloudGamesPrepareCustomAvatarUploadRequest:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the custom avatar.
        mime:
          type: string
          description: The MIME type of the custom avatar.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
    CloudGamesPrepareCustomAvatarUploadResponse:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesListGameBuildsResponse:
      type: object
      properties:
        builds:
          type: array
          items:
            $ref: '#/components/schemas/CloudBuildSummary'
          description: A list of build summaries.
      required:
        - builds
    CloudGamesCreateGameBuildRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        image_tag:
          type: string
          description: A tag given to the game build.
        image_file:
          $ref: '#/components/schemas/UploadPrepareFile'
        multipart_upload:
          type: boolean
      required:
        - display_name
        - image_tag
        - image_file
    CloudGamesCreateGameBuildResponse:
      type: object
      properties:
        build_id:
          type: string
          format: uuid
        upload_id:
          type: string
          format: uuid
        image_presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        image_presigned_requests:
          type: array
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - build_id
        - upload_id
    CloudGamesListGameCdnSitesResponse:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnSiteSummary'
          description: A list of CDN site summaries.
      required:
        - sites
    CloudGamesCreateGameCdnSiteRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        files:
          type: array
          items:
            $ref: '#/components/schemas/UploadPrepareFile'
          description: A list of files preparing to upload.
      required:
        - display_name
        - files
    CloudGamesCreateGameCdnSiteResponse:
      type: object
      properties:
        site_id:
          type: string
          format: uuid
        upload_id:
          type: string
          format: uuid
        presigned_requests:
          type: array
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - site_id
        - upload_id
        - presigned_requests
    CloudGamesGetGamesResponse:
      type: object
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/CloudGamesGameSummary'
          description: A list of game summaries.
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupHandle'
          description: A list of group summaries.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - games
        - groups
        - watch
    CloudGamesCreateGameRequest:
      type: object
      properties:
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          format: uuid
      required:
        - name_id
        - display_name
        - developer_group_id
    CloudGamesCreateGameResponse:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
      required:
        - game_id
    CloudGamesValidateGameRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - name_id
    CloudGamesValidateGameResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesGetGameByIdResponse:
      type: object
      properties:
        game:
          $ref: '#/components/schemas/CloudGameFull'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - game
        - watch
    CloudGamesGameBannerUploadPrepareRequest:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the game banner.
        mime:
          type: string
          description: The MIME type of the game banner.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
    CloudGamesGameBannerUploadPrepareResponse:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesGameLogoUploadPrepareRequest:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the game logo.
        mime:
          type: string
          description: The MIME type of the game logo.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
    CloudGamesGameLogoUploadPrepareResponse:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesGameSummary:
      type: object
      description: A game summary.
      properties:
        game_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          format: uuid
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        logo_url:
          type: string
          description: The URL of this game's logo image.
        banner_url:
          type: string
          description: The URL of this game's banner image.
      required:
        - game_id
        - create_ts
        - name_id
        - display_name
        - developer_group_id
    CloudGamesExportMatchmakerLobbyHistoryRequest:
      type: object
      properties:
        query_start:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        query_end:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
    CloudGamesExportMatchmakerLobbyHistoryResponse:
      type: object
      properties:
        url:
          type: string
          description: The URL to a CSV file for the given lobby history.
      required:
        - url
    CloudGamesDeleteMatchmakerLobbyResponse:
      type: object
      properties:
        did_remove:
          type: boolean
          description: Whether or not the lobby was successfully stopped.
    CloudGamesGetLobbyLogsResponse:
      type: object
      properties:
        lines:
          type: array
          items:
            type: string
          description: Sorted old to new.
        timestamps:
          type: array
          items:
            type: string
          description: Sorted old to new.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - lines
        - timestamps
        - watch
    CloudGamesExportLobbyLogsRequest:
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/CloudGamesLogStream'
      required:
        - stream
    CloudGamesExportLobbyLogsResponse:
      type: object
      properties:
        url:
          type: string
          description: The URL to a CSV file for the given lobby history.
      required:
        - url
    CloudGamesLogStream:
      type: string
      enum:
        - std_out
        - std_err
    CloudGamesNamespacesGetAnalyticsMatchmakerLiveResponse:
      type: object
      properties:
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/CloudLobbySummaryAnalytics'
          description: A list of analytics lobby summaries.
      required:
        - lobbies
    CloudGamesNamespacesListNamespaceLobbiesResponse:
      type: object
      properties:
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsLobbySummary'
          description: A list of lobby log summaries.
      required:
        - lobbies
    CloudGamesNamespacesGetNamespaceLobbyResponse:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/CloudLogsLobbySummary'
        metrics:
          $ref: '#/components/schemas/CloudSvcMetrics'
        stdout_presigned_urls:
          type: array
          items:
            type: string
          description: |-
            **Deprecated**
            A list of URLs.
        stderr_presigned_urls:
          type: array
          items:
            type: string
          description: |-
            **Deprecated**
            A list of URLs.
        perf_lists:
          type: array
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          description: |-
            **Deprecated**
            A list of service performance summaries.
      required:
        - lobby
        - stdout_presigned_urls
        - stderr_presigned_urls
        - perf_lists
    CloudGamesCreateCloudTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesCreateGameVersionRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - display_name
        - config
    CloudGamesCreateGameVersionResponse:
      type: object
      properties:
        version_id:
          type: string
          format: uuid
      required:
        - version_id
    CloudGamesValidateGameVersionRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - display_name
        - config
    CloudGamesValidateGameVersionResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesGetGameVersionByIdResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/CloudVersionFull'
      required:
        - version
    CloudValidateGroupRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - display_name
    CloudValidateGroupResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGetRayPerfLogsResponse:
      type: object
      properties:
        perf_lists:
          type: array
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          description: A list of service performance summaries.
      required:
        - perf_lists
    CloudGetRegionTiersResponse:
      type: object
      properties:
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionTier'
          description: A list of region server tiers.
      required:
        - tiers
    CloudVersionEngineGodotConfig:
      type: object
      properties: {}
    CloudVersionEngineHtml5Config:
      type: object
      properties: {}
    CloudVersionEngineUnityConfig:
      type: object
      properties: {}
    CloudVersionEngineUnrealConfig:
      type: object
      properties:
        game_module:
          type: string
          description: >-
            Name of the Unreal module that holds the game code.

            This is usually the value of `$.Modules[0].Name` in the file
            `MyProject.unproject`.

            _Configures Rivet CLI behavior. Has no effect on server behavior._
      required:
        - game_module
    CloudVersionIdentityConfig:
      type: object
      description: Identity configuration for a given version.
      properties:
        display_names:
          type: array
          items:
            type: string
        avatars:
          type: array
          items:
            type: string
            format: uuid
        custom_display_names:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomDisplayName'
          description: '**Deprecated**'
        custom_avatars:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomAvatar'
          description: '**Deprecated**'
    CloudVersionIdentityCustomDisplayName:
      type: object
      properties:
        display_name:
          type: string
      required:
        - display_name
    CloudVersionIdentityCustomAvatar:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
      required:
        - upload_id
    CloudVersionMatchmakerPortRange:
      type: object
      description: Range of ports that can be connected to.
      properties:
        min:
          type: integer
          description: Unsigned 32 bit integer.
        max:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - min
        - max
    CloudVersionMatchmakerPortProtocol:
      type: string
      enum:
        - http
        - https
        - tcp
        - tcp_tls
        - udp
      description: A port protocol.
    CloudVersionMatchmakerProxyKind:
      type: string
      enum:
        - none
        - game_guard
    CloudVersionMatchmakerCaptcha:
      type: object
      description: Matchmaker captcha configuration.
      properties:
        requests_before_reverify:
          type: integer
          description: >-
            Denotes how many requests a connection can make before it is
            required to reverify a captcha.
        verification_ttl:
          type: integer
          format: int64
          description: >-
            Denotes how long a connection can continue to reconnect without
            having to reverify a captcha (in milliseconds).
        hcaptcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptcha'
        turnstile:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaTurnstile'
      required:
        - requests_before_reverify
        - verification_ttl
    CloudVersionMatchmakerCaptchaHcaptcha:
      type: object
      description: hCpatcha configuration.
      properties:
        level:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptchaLevel'
      required:
        - level
    CloudVersionMatchmakerCaptchaHcaptchaLevel:
      type: string
      enum:
        - easy
        - moderate
        - difficult
        - always_on
      description: How hard a captcha should be.
    CloudVersionMatchmakerCaptchaTurnstile:
      type: object
      description: Turnstile captcha configuration.
      properties:
        domains:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaTurnstileDomain'
      required:
        - domains
    CloudVersionMatchmakerCaptchaTurnstileDomain:
      type: object
      description: Turnstile domain configuration.
      properties:
        secret_key:
          type: string
      required:
        - secret_key
    CloudVersionMatchmakerNetworkMode:
      type: string
      enum:
        - bridge
        - host
    CloudVersionMatchmakerGameMode:
      type: object
      description: A game mode.
      properties:
        regions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        listable:
          type: boolean
        find_config:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeFindConfig'
        join_config:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeJoinConfig'
        create_config:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeCreateConfig'
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
    CloudVersionMatchmakerGameModeRegion:
      type: object
      description: A game mode region.
      properties:
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
    CloudVersionMatchmakerGameModeRuntimeDocker:
      type: object
      description: A game mode runtime running through Docker.
      properties:
        dockerfile:
          type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        image:
          type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        image_id:
          type: string
          format: uuid
        args:
          type: array
          items:
            type: string
        env:
          type: object
          additionalProperties:
            type: string
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerGameModeRuntimeDockerPort
    CloudVersionMatchmakerGameModeRuntimeDockerPort:
      type: object
      description: A docker port.
      properties:
        port:
          type: integer
          description: The port number to connect to.
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
        proxy:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyKind'
          description: How this port should be proxied. Defaults to 'game-guard`.
        dev_port:
          type: integer
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        dev_port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        dev_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
    CloudVersionMatchmakerGameModeIdleLobbiesConfig:
      type: object
      description: Configuration for how many idle lobbies a game version should have.
      properties:
        min:
          type: integer
        max:
          type: integer
      required:
        - min
        - max
    CloudVersionMatchmakerGameModeIdentityRequirement:
      type: string
      enum:
        - none
        - guest
        - registered
      description: >-
        The registration requirement for a user when joining/finding/creating a
        lobby. "None" allows for connections without an identity.
    CloudVersionMatchmakerGameModeVerificationConfig:
      type: object
      description: >-
        Configuration that tells Rivet where to send validation requests and
        with what headers. When set, Rivet will send the `verification_data`
        property (given by the user in the find/join/create endpoint) to the
        given url along with the headers provided and some information about the
        requested lobby. The response of this request will determine if the user
        can join that lobby or not.
      properties:
        url:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
      required:
        - url
        - headers
    CloudVersionMatchmakerGameModeFindConfig:
      type: object
      description: >-
        Configures the requirements and authentication for the /find endpoint.
        If this value is not set in the config, the /find endpoint is still
        enabled.
      properties:
        enabled:
          type: boolean
          description: Sets whether or not the /find endpoint is enabled.
        identity_requirement:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement
        verification_config:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig
      required:
        - enabled
        - identity_requirement
    CloudVersionMatchmakerGameModeJoinConfig:
      type: object
      description: >-
        Configures the requirements and authentication for the /join endpoint.
        If this value is not set in the config, the /join endpoint is still
        enabled.
      properties:
        enabled:
          type: boolean
          description: Sets whether or not the /join endpoint is enabled.
        identity_requirement:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement
        verification_config:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig
      required:
        - enabled
        - identity_requirement
    CloudVersionMatchmakerGameModeCreateConfig:
      type: object
      description: >-
        Configures the requirements and authentication for the /create endpoint.
        If this value is not set in the config, the /create endpoint is NOT
        enabled.
      properties:
        identity_requirement:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement
        verification_config:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig
        enable_public:
          type: boolean
        enable_private:
          type: boolean
        max_lobbies_per_identity:
          type: integer
      required:
        - identity_requirement
        - enable_public
        - enable_private
    CloudVersionMatchmakerLobbyGroup:
      type: object
      description: A game mode.
      properties:
        name_id:
          type: string
          description: >-
            **Deprecated: use GameMode instead**

            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        regions:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRegion'
          description: A list of game mode regions.
        max_players_normal:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_direct:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_party:
          type: integer
          description: Unsigned 32 bit integer.
        runtime:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntime'
      required:
        - name_id
        - regions
        - max_players_normal
        - max_players_direct
        - max_players_party
        - runtime
    CloudVersionMatchmakerLobbyGroupRuntime:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A union representing the runtime a game mode runs on.
      properties:
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDocker'
    CloudVersionMatchmakerLobbyGroupRegion:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A game mode region.
      properties:
        region_id:
          type: string
          format: uuid
        tier_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        idle_lobbies:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig
      required:
        - region_id
        - tier_name_id
    CloudVersionMatchmakerLobbyGroupRuntimeDocker:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A game mode runtime running through Docker.
      properties:
        build_id:
          type: string
          format: uuid
        args:
          type: array
          items:
            type: string
        env_vars:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
      required:
        - args
        - env_vars
        - ports
    CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A docker environment variable.
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
    CloudVersionMatchmakerLobbyGroupRuntimeDockerPort:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A docker port.
      properties:
        label:
          type: string
          description: The label of this docker port.
        target_port:
          type: integer
          description: The port number to connect to.
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        proxy_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
      required:
        - label
        - proxy_protocol
    CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        Configuration for how many idle lobbies a game version should have.
      properties:
        min_idle_lobbies:
          type: integer
          description: Unsigned 32 bit integer.
        max_idle_lobbies:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - min_idle_lobbies
        - max_idle_lobbies
    Identifier:
      type: string
      description: >-
        A human readable short identifier used to references resources.
        Different than a `uuid` because this is intended to be human readable.
        Different than `DisplayName` because this should not include special
        characters and be short.
    Bio:
      type: string
      description: Follows regex ^(?:[^\n\r]+\n?|\n){1,5}$
    Email:
      type: string
      description: A valid email address
    Jwt:
      type: string
      description: Documentation at https://jwt.io/
    WatchQuery:
      type: string
      description: A query parameter denoting the requests watch index.
    WatchResponse:
      type: object
      description: Provided by watchable endpoints used in blocking loops.
      properties:
        index:
          type: string
          description: |
            Index indicating the version of the data responded.
            Pass this to `WatchQuery` to block and wait for the next response.
      required:
        - index
    DisplayName:
      type: string
    AccountNumber:
      type: integer
    ValidationError:
      type: object
      description: An error given by failed content validation.
      properties:
        path:
          type: array
          items:
            type: string
          description: A list of strings denoting the origin of a validation error.
      required:
        - path
    EmptyObject:
      type: object
      properties: {}
    ErrorMetadata:
      description: Unstructured metadata relating to an error. Must be manually parsed.
    ErrorBody:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        documentation:
          type: string
        metadata:
          $ref: '#/components/schemas/ErrorMetadata'
      required:
        - code
        - message
    GameHandle:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
        name_id:
          $ref: '#/components/schemas/Identifier'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        logo_url:
          type: string
          description: The URL of this game's logo image.
        banner_url:
          type: string
          description: The URL of this game's banner image.
      required:
        - game_id
        - name_id
        - display_name
    GameStatSummary:
      type: object
      description: A game statistic summary.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        stats:
          type: array
          items:
            $ref: '#/components/schemas/GameStat'
      required:
        - game
        - stats
    GameStat:
      type: object
      description: A game statistic.
      properties:
        config:
          $ref: '#/components/schemas/GameStatConfig'
        overall_value:
          type: number
          format: double
          description: A single overall value of the given statistic.
      required:
        - config
        - overall_value
    GameStatConfig:
      type: object
      description: A game statistic config.
      properties:
        record_id:
          type: string
          format: uuid
        icon_id:
          type: string
          format: uuid
        format:
          $ref: '#/components/schemas/GameStatFormatMethod'
        aggregation:
          $ref: '#/components/schemas/GameStatAggregationMethod'
        sorting:
          $ref: '#/components/schemas/GameStatSortingMethod'
        priority:
          type: integer
        display_name:
          $ref: '#/components/schemas/DisplayName'
        postfix_singular:
          type: string
          description: >-
            A string appended to the end of a singular game statistic's value.
            Example: 1 **dollar**.
        postfix_plural:
          type: string
          description: >-
            A string appended to the end of a game statistic's value that is not
            exactly 1. Example: 45 **dollars**.
        prefix_singular:
          type: string
          description: >-
            A string appended to the beginning of a singular game statistic's
            value. Example: **value** 1.
        prefix_plural:
          type: string
          description: >-
            A string prepended to the beginning of a game statistic's value that
            is not exactly 1. Example: **values** 45.
      required:
        - record_id
        - icon_id
        - format
        - aggregation
        - sorting
        - priority
        - display_name
    GameStatFormatMethod:
      type: string
      enum:
        - integer
        - float_1
        - float_2
        - float_3
        - duration_minute
        - duration_second
        - duration_hundredth_second
      description: A value denoting the format method of a game statistic.
    GameStatAggregationMethod:
      type: string
      enum:
        - sum
        - average
        - min
        - max
      description: A value denoting the aggregation method of a game statistic.
    GameStatSortingMethod:
      type: string
      enum:
        - desc
        - asc
      description: A value denoting the sorting method of a game statistic.
    GeoCoord:
      type: object
      description: Geographical coordinates for a location on Planet Earth.
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      required:
        - latitude
        - longitude
    GeoDistance:
      type: object
      description: Distance available in multiple units.
      properties:
        kilometers:
          type: number
          format: double
        miles:
          type: number
          format: double
      required:
        - kilometers
        - miles
    GroupSummary:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        avatar_url:
          type: string
          description: The URL of this group's avatar image.
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer.
        bio:
          $ref: '#/components/schemas/Bio'
        is_current_identity_member:
          type: boolean
          description: Whether or not the current identity is a member of this group.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
        member_count:
          type: integer
        owner_identity_id:
          type: string
          format: uuid
      required:
        - group_id
        - display_name
        - external
        - is_developer
        - bio
        - is_current_identity_member
        - publicity
        - member_count
        - owner_identity_id
    GroupPublicity:
      type: string
      enum:
        - open
        - closed
      description: The current publicity value for the given group.
    GroupHandle:
      type: object
      description: A group handle.
      properties:
        group_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        avatar_url:
          type: string
          description: The URL of this group's avatar image
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer group.
      required:
        - group_id
        - display_name
        - external
    GroupExternalLinks:
      type: object
      description: External links for this group.
      properties:
        profile:
          type: string
          description: A link to this group's profile page.
        chat:
          type: string
          description: A link to this group's chat page.
      required:
        - profile
        - chat
    GroupJoinRequest:
      type: object
      description: A group join request.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - identity
        - ts
    GroupMember:
      type: object
      description: A group member.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity
    GroupProfile:
      type: object
      description: A list of group profiles.
      properties:
        group_id:
          type: string
          format: uuid
        display_name:
          type: string
          description: Represent a resource's readable display name.
        avatar_url:
          type: string
          description: The URL of this group's avatar image.
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer.
        bio:
          type: string
          description: Detailed information about a profile.
        is_current_identity_member:
          type: boolean
          description: Whether or not the current identity is a member of this group.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
        member_count:
          type: integer
          description: Unsigned 32 bit integer.
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMember'
          description: A list of group members.
        join_requests:
          type: array
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          description: A list of group join requests.
        is_current_identity_requesting_join:
          type: boolean
          description: >-
            Whether or not the current identity is currently requesting to join
            this group.
        owner_identity_id:
          type: string
          format: uuid
        thread_id:
          type: string
          format: uuid
      required:
        - group_id
        - display_name
        - external
        - bio
        - publicity
        - members
        - join_requests
        - owner_identity_id
    GroupBannedIdentity:
      type: object
      description: A banned identity.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        ban_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - identity
        - ban_ts
    GroupGetInviteResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    GroupConsumeInviteResponse:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
    GroupCreateInviteRequest:
      type: object
      properties:
        ttl:
          type: number
          format: double
          description: How long until the group invite expires (in milliseconds).
        use_count:
          type: number
          format: double
          description: How many times the group invite can be used.
    GroupCreateInviteResponse:
      type: object
      properties:
        code:
          type: string
          description: >-
            The code that will be passed to `rivet.api.group#ConsumeInvite` to
            join a group.
      required:
        - code
    GroupResolveJoinRequestRequest:
      type: object
      properties:
        resolution:
          type: boolean
    IdentityGlobalEvent:
      type: object
      description: An event relevant to the current identity.
      properties:
        ts:
          type: string
          format: date-time
        kind:
          $ref: '#/components/schemas/IdentityGlobalEventKind'
        notification:
          $ref: '#/components/schemas/IdentityGlobalEventNotification'
      required:
        - ts
        - kind
    IdentityGlobalEventKind:
      type: object
      properties:
        chat_message:
          $ref: '#/components/schemas/IdentityGlobalEventChatMessage'
        chat_read:
          $ref: '#/components/schemas/IdentityGlobalEventChatRead'
        identity_update:
          $ref: '#/components/schemas/IdentityGlobalEventIdentityUpdate'
        matchmaker_lobby_join:
          $ref: '#/components/schemas/IdentityGlobalEventMatchmakerLobbyJoin'
        chat_thread_remove:
          $ref: '#/components/schemas/IdentityGlobalEventChatThreadRemove'
    IdentityGlobalEventNotification:
      type: object
      description: >
        Notifications represent information that should be presented to the user

        immediately.

        At the moment, only chat message events have associated notifications.

        # Display

        Notifications should be displayed in an unobtrusive manner throughout
        the

        entire game. Notifications should disappear after a few seconds if not

        interacted with.

        # Interactions

        If your platform supports it, notifications should be able to be clicked
        or

        tapped in order to open the relevant context for the event.

        For a simple implementation of notification interactions, open `url` in
        a

        web browser to present the relevant context. For example, a chat message

        notification will open the thread the chat message was sent in.

        For advanced implementations that implement a custom chat UI, use

        `GlobalEvent.kind` to determine what action to take when the
        notification is interacted with. 

        For example, if the global event kind is `GlobalEventChatMessage`, then
        open

        the chat UI for the given thread.
      properties:
        title:
          type: string
        description:
          type: string
        thumbnail_url:
          type: string
          description: >-
            URL to an image thumbnail that should be shown for this
            notification.
        url:
          type: string
          description: Rivet Hub URL that holds the relevant context for this notification.
      required:
        - title
        - description
        - thumbnail_url
        - url
    IdentityGlobalEventChatMessage:
      type: object
      properties:
        thread:
          $ref: '#/components/schemas/ChatThread'
      required:
        - thread
    IdentityGlobalEventChatRead:
      type: object
      properties:
        thread_id:
          type: string
          format: uuid
        read_ts:
          type: string
          format: date-time
      required:
        - thread_id
        - read_ts
    IdentityGlobalEventIdentityUpdate:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
      required:
        - identity
    IdentityGlobalEventMatchmakerLobbyJoin:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    IdentityGlobalEventChatThreadRemove:
      type: object
      description: >
        Received any time the current identity is no longer able to access the 
        given thread. This can happen if the identity leaves a group or party.
      properties:
        thread_id:
          type: string
          format: uuid
      required:
        - thread_id
    IdentityUpdateGameActivity:
      type: object
      description: >-
        Information about the identity's current game. This is information that
        all other identities can see about what the current identity is doing.
      properties:
        message:
          type: string
          description: A short message about the current game activity.
        public_metadata:
          description: JSON data seen by anyone.
        mutual_metadata:
          description: >-
            JSON data seen only by the given identity and their mutual
            followers.
    IdentityHandle:
      type: object
      description: An identity handle.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
    IdentitySummary:
      type: object
      description: An identity summary.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        following:
          type: boolean
          description: Whether or not the requestee's identity is following this identity.
        is_following_me:
          type: boolean
          description: >-
            Whether or not this identity is both followng and is followed by the
            requestee's identity.
        is_mutual_following:
          type: boolean
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
        - following
        - is_following_me
        - is_mutual_following
    IdentityProfile:
      type: object
      description: An identity profile.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        is_admin:
          type: boolean
          description: Whether or not this identity is an admin.
        is_game_linked:
          type: boolean
          description: >-
            Whether or not this game user has been linked through the Rivet
            dashboard.
        dev_state:
          $ref: '#/components/schemas/IdentityDevState'
          description: |
            **Deprecated**
        follower_count:
          type: integer
          format: int64
        following_count:
          type: integer
          format: int64
        following:
          type: boolean
          description: Whether or not the requestee's identity is following this identity.
        is_following_me:
          type: boolean
          description: >-
            Whether or not this identity is both followng and is followed by the
            requestee's identity.
        is_mutual_following:
          type: boolean
        join_ts:
          type: string
          format: date-time
        bio:
          $ref: '#/components/schemas/Bio'
        linked_accounts:
          type: array
          items:
            $ref: '#/components/schemas/IdentityLinkedAccount'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGroup'
        games:
          type: array
          items:
            $ref: '#/components/schemas/GameStatSummary'
        awaiting_deletion:
          type: boolean
          description: >
            Whether or not this identity is awaiting account deletion. Only
            visible to when the requestee is

            this identity.
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
        - is_admin
        - follower_count
        - following_count
        - following
        - is_following_me
        - is_mutual_following
        - join_ts
        - bio
        - linked_accounts
        - groups
        - games
    IdentityExternalLinks:
      type: object
      description: External links for an identity.
      properties:
        profile:
          type: string
          description: A link to this identity's profile page.
        settings:
          type: string
          description: A link to the Rivet settings page.
        chat:
          type: string
          description: A link to a chat page with the given identity.
      required:
        - profile
    IdentityPresence:
      type: object
      description: Information about the identity's current status, party, and active game.
      properties:
        update_ts:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/IdentityStatus'
        game_activity:
          $ref: '#/components/schemas/IdentityGameActivity'
      required:
        - update_ts
        - status
    IdentityStatus:
      type: string
      enum:
        - online
        - away
        - offline
      description: >-
        The current status of an identity. This helps players understand if
        another player is currently playing or has their game in the background.
    IdentityGameActivity:
      type: object
      description: The game an identity is currently participating in.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        message:
          type: string
          description: A short activity message about the current game activity.
        public_metadata:
          description: JSON data seen by anyone.
        mutual_metadata:
          description: >-
            JSON data seen only by the given identity and their mutual
            followers.
      required:
        - game
        - message
    IdentityGroup:
      type: object
      description: A group that the given identity.
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    IdentityLinkedAccount:
      type: object
      description: A union representing an identity's linked accounts.
      properties:
        email:
          $ref: '#/components/schemas/IdentityEmailLinkedAccount'
    IdentityEmailLinkedAccount:
      type: object
      description: An identity's linked email.
      properties:
        email:
          $ref: '#/components/schemas/Email'
      required:
        - email
    IdentityDevState:
      type: string
      enum:
        - inactive
        - pending
        - accepted
      description: The state of the given identity's developer status.
    IdentityGameLinkStatus:
      type: string
      enum:
        - incomplete
        - complete
        - cancelled
    IdentityWatchEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGlobalEvent'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - events
        - watch
    IdentityPrepareGameLinkResponse:
      type: object
      properties:
        identity_link_token:
          type: string
          description: >-
            Pass this to `GetGameLink` to get the linking status. Valid for 15
            minutes.
        identity_link_url:
          type: string
        expire_ts:
          type: string
          format: date-time
      required:
        - identity_link_token
        - identity_link_url
        - expire_ts
    IdentityGetGameLinkResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/IdentityGameLinkStatus'
        game:
          $ref: '#/components/schemas/GameHandle'
        current_identity:
          $ref: '#/components/schemas/IdentityHandle'
        new_identity:
          $ref: '#/components/schemas/IdentityGetGameLinkNewIdentity'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - status
        - game
        - current_identity
        - watch
    IdentityGetGameLinkNewIdentity:
      type: object
      properties:
        identity_token:
          $ref: '#/components/schemas/Jwt'
        identity_token_expire_ts:
          type: string
          format: date-time
        identity:
          $ref: '#/components/schemas/IdentityProfile'
      required:
        - identity_token
        - identity_token_expire_ts
        - identity
    KvKey:
      type: string
      description: >-
        A string representing a key in the key-value database.

        Maximum length of 512 characters.

        *Recommended Key Path Format*

        Key path components are split by a slash (e.g. `a/b/c` has the path
        components `["a", "b", "c"]`). Slashes can be escaped by using a
        backslash (e.g. `a/b\/c/d` has the path components `["a", "b/c", "d"]`).

        This format is not enforced by Rivet, but the tools built around Rivet
        KV work better if this format is used.
    KvValue:
      description: |-
        A JSON object stored in the KV database.
        A `null` value indicates the entry is deleted.
        Maximum length of 262,144 bytes when encoded.
    KvEntry:
      type: object
      description: A key-value entry.
      properties:
        key:
          $ref: '#/components/schemas/KvKey'
        value:
          $ref: '#/components/schemas/KvValue'
        deleted:
          type: boolean
      required:
        - key
        - value
    KvPutEntry:
      type: object
      description: A new entry to insert into the key-value database.
      properties:
        key:
          $ref: '#/components/schemas/KvKey'
        value:
          $ref: '#/components/schemas/KvValue'
      required:
        - key
        - value
    MatchmakerLobbyInfo:
      type: object
      description: A public lobby in the lobby list.
      properties:
        region_id:
          type: string
        game_mode_id:
          type: string
        lobby_id:
          type: string
          format: uuid
        max_players_normal:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        total_player_count:
          type: integer
        state: {}
      required:
        - region_id
        - game_mode_id
        - lobby_id
        - max_players_normal
        - max_players_direct
        - max_players_party
        - total_player_count
    MatchmakerGameModeInfo:
      type: object
      description: A game mode that the player can join.
      properties:
        game_mode_id:
          $ref: '#/components/schemas/Identifier'
      required:
        - game_mode_id
    MatchmakerRegionInfo:
      type: object
      description: A region that the player can connect to.
      properties:
        region_id:
          $ref: '#/components/schemas/Identifier'
        provider_display_name:
          type: string
        region_display_name:
          type: string
        datacenter_coord:
          $ref: '#/components/schemas/GeoCoord'
        datacenter_distance_from_client:
          $ref: '#/components/schemas/GeoDistance'
      required:
        - region_id
        - provider_display_name
        - region_display_name
        - datacenter_coord
        - datacenter_distance_from_client
    MatchmakerJoinLobby:
      type: object
      description: A matchmaker lobby.
      properties:
        lobby_id:
          type: string
          format: uuid
        region:
          $ref: '#/components/schemas/MatchmakerJoinRegion'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          description: '**Deprecated**'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
          description: '**Deprecated**'
      required:
        - lobby_id
        - region
        - ports
        - player
    MatchmakerJoinRegion:
      type: object
      description: A matchmaker lobby region.
      properties:
        region_id:
          $ref: '#/components/schemas/Identifier'
        display_name:
          $ref: '#/components/schemas/DisplayName'
      required:
        - region_id
        - display_name
    MatchmakerJoinPort:
      type: object
      properties:
        host:
          type: string
          description: |
            The host for the given port. Will be null if using a port range.
        hostname:
          type: string
        port:
          type: integer
          description: |
            The port number for this lobby. Will be null if using a port range.
        port_range:
          $ref: '#/components/schemas/MatchmakerJoinPortRange'
          description: >
            Whether or not this lobby port uses TLS. You cannot mix a non-TLS
            and TLS ports.
        is_tls:
          type: boolean
      required:
        - hostname
        - is_tls
    MatchmakerJoinPortRange:
      type: object
      description: Inclusive range of ports that can be connected to.
      properties:
        min:
          type: integer
          description: Minimum port that can be connected to. Inclusive range.
        max:
          type: integer
          description: Maximum port that can be connected to. Inclusive range.
      required:
        - min
        - max
    MatchmakerJoinPlayer:
      type: object
      description: A matchmaker lobby player.
      properties:
        token:
          $ref: '#/components/schemas/Jwt'
          description: >
            Pass this token through the socket to the lobby server. The lobby
            server will validate this token with `PlayerConnected.player_token`
      required:
        - token
    MatchmakerCustomLobbyPublicity:
      type: string
      enum:
        - public
        - private
    MatchmakerFindLobbyResponse:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    MatchmakerJoinLobbyResponse:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    MatchmakerCreateLobbyResponse:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    MatchmakerListLobbiesResponse:
      type: object
      properties:
        game_modes:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerGameModeInfo'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerLobbyInfo'
      required:
        - game_modes
        - regions
        - lobbies
    MatchmakerGetStatisticsResponse:
      type: object
      properties:
        player_count:
          type: integer
          format: int64
        game_modes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerGameModeStatistics'
      required:
        - player_count
        - game_modes
    MatchmakerGameModeStatistics:
      type: object
      properties:
        player_count:
          type: integer
          format: int64
        regions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerRegionStatistics'
      required:
        - player_count
        - regions
    MatchmakerRegionStatistics:
      type: object
      properties:
        player_count:
          type: integer
          format: int64
      required:
        - player_count
    MatchmakerListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
      required:
        - regions
    UploadPresignedRequest:
      type: object
      description: >
        A presigned request used to upload files.  Upload your file to the given
        URL via a PUT request.
      properties:
        path:
          type: string
          description: >
            The name of the file to upload.  This is the same as the one given
            in the upload prepare file.
        url:
          type: string
          description: |
            The URL of the presigned request for which to upload your file to.
      required:
        - path
        - url
    UploadPrepareFile:
      type: object
      description: A file being prepared to upload.
      properties:
        path:
          type: string
          description: The path/filename of the file.
        content_type:
          type: string
          description: The MIME type of the file.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
