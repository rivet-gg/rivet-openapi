openapi: 3.0.1
info:
  title: Rivet API
  version: ''
paths:
  /identities/{identity_id}/thread:
    get:
      description: Returns a thread ID with a given identity.
      operationId: chat_identity_getDirectThread
      tags:
        - ChatIdentity
      parameters:
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetDirectThreadOutput'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: &ref_0
        - BearerAuth: []
  /auth/inspect:
    get:
      description: Returns information about the current authenticated agent.
      operationId: cloud_auth_inspect
      tags:
        - CloudAuth
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudInspectOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /devices/links:
    post:
      operationId: cloud_devices_links_prepare
      tags:
        - CloudDevicesLinks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesPrepareDeviceLinkOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
    get:
      operationId: cloud_devices_links_get
      tags:
        - CloudDevicesLinks
      parameters:
        - name: device_link_token
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Jwt'
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesGetDeviceLinkOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
  /games/{game_id}/avatars:
    get:
      description: Lists custom avatars for the given game.
      operationId: cloud_games_avatars_listGameCustomAvatars
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCustomAvatarsOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/prepare:
    post:
      description: |-
        Prepares a custom avatar image upload.
        Complete upload with `rivet.api.cloud#CompleteCustomAvatarUpload`.
      operationId: cloud_games_avatars_prepareCustomAvatarUpload
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesPrepareCustomAvatarUploadOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesPrepareCustomAvatarUploadInput'
  /games/{game_id}/avatar-upload/{upload_id}/complete:
    post:
      description: >-
        Completes a custom avatar image upload. Must be called after the file
        upload process completes.
      operationId: cloud_games_avatars_completeCustomAvatarUpload
      tags:
        - CloudGamesAvatars
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: upload_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/builds:
    get:
      description: Lists game builds for the given game.
      operationId: cloud_games_builds_listGameBuilds
      tags:
        - CloudGamesBuilds
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameBuildsOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new game build for the given game.
      operationId: cloud_games_builds_createGameBuild
      tags:
        - CloudGamesBuilds
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameBuildOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameBuildInput'
  /games/{game_id}/cdn/sites:
    get:
      description: Lists CDN sites for a game.
      operationId: cloud_games_cdn_listGameCdnSites
      tags:
        - CloudGamesCdn
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCdnSitesOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new CDN site for the given game.
      operationId: cloud_games_cdn_createGameCdnSite
      tags:
        - CloudGamesCdn
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteInput'
  /games:
    get:
      description: >-
        Returns a list of games in which the current identity is a group member
        of its development team.
      operationId: cloud_games_games_getGames
      tags:
        - CloudGamesGames
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGamesOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new game.
      operationId: cloud_games_games_createGame
      tags:
        - CloudGamesGames
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameInput'
  /games/validate:
    post:
      description: Validates information used to create a new game.
      operationId: cloud_games_games_validateGame
      tags:
        - CloudGamesGames
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameInput'
  /games/{game_id}:
    get:
      description: Returns a game by its game id.
      operationId: cloud_games_games_getGameById
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameByIdOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/banner-upload/prepare:
    post:
      description: Prepares a game banner image upload.
      operationId: cloud_games_games_gameBannerUploadPrepare
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareInput'
  /games/{game_id}/banner-upload/{upload_id}/complete:
    post:
      description: >-
        Completes an game banner image upload. Must be called after the file
        upload process completes.
      operationId: cloud_games_games_gameBannerUploadComplete
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: upload_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/logo-upload/prepare:
    post:
      description: Prepares a game logo image upload.
      operationId: cloud_games_games_gameLogoUploadPrepare
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareInput'
  /games/{game_id}/logo-upload/{upload_id}/complete:
    post:
      description: >-
        Completes a game logo image upload. Must be called after the file upload
        process completes.
      operationId: cloud_games_games_gameLogoUploadComplete
      tags:
        - CloudGamesGames
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: upload_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/export-history:
    post:
      description: Exports lobby history over a given query time span.
      operationId: cloud_games_matchmaker_exportMatchmakerLobbyHistory
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesExportMatchmakerLobbyHistoryOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesExportMatchmakerLobbyHistoryInput'
  /games/{game_id}/matchmaker/lobbies/{lobby_id}:
    delete:
      description: Deletes a matchmaker lobby, stopping it immediately.
      operationId: cloud_games_matchmaker_deleteMatchmakerLobby
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: lobby_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesDeleteMatchmakerLobbyOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/{lobby_id}/logs:
    get:
      description: Returns the logs for a given lobby.
      operationId: cloud_games_matchmaker_getLobbyLogs
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: lobby_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: stream
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CloudGamesLogStream'
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetLobbyLogsOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/matchmaker/lobbies/{lobby_id}/logs/export:
    post:
      description: Generates a download URL for logs.
      operationId: cloud_games_matchmaker_exportLobbyLogs
      tags:
        - CloudGamesMatchmaker
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: lobby_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesExportLobbyLogsOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesExportLobbyLogsInput'
  /games/{game_id}/namespaces/{namespace_id}/analytics/matchmaker/live:
    get:
      description: Returns live information about all active lobies for a given namespace.
      operationId: cloud_games_namespaces_analytics_getNamespaceAnalyticsMatchmakerLive
      tags:
        - CloudGamesNamespacesAnalytics
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetNamespaceAnalyticsMatchmakerLiveOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/logs/lobbies:
    get:
      description: Returns a list of lobbies for the given game namespace.
      operationId: cloud_games_namespaces_logs_listNamespaceLobbies
      tags:
        - CloudGamesNamespacesLogs
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: before_create_ts
          in: query
          description: Returns lobbies created before this timestamp.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesListNamespaceLobbiesOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/logs/lobbies/{lobby_id}:
    get:
      description: Returns a lobby from the given game namespace.
      operationId: cloud_games_namespaces_logs_getNamespaceLobby
      tags:
        - CloudGamesNamespacesLogs
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: lobby_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetNamespaceLobbyOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/tokens/cloud:
    post:
      description: Creates a new game cloud token.
      operationId: cloud_games_tokens_createCloudToken
      tags:
        - CloudGamesTokens
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateCloudTokenOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/versions:
    post:
      description: Creates a new game version.
      operationId: cloud_games_versions_createGameVersion
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameVersionOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameVersionInput'
  /games/{game_id}/versions/validate:
    post:
      description: Validates information used to create a new game version.
      operationId: cloud_games_versions_validateGameVersion
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameVersionOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameVersionInput'
  /games/{game_id}/versions/{version_id}:
    get:
      description: Returns a game version by its version ID.
      operationId: cloud_games_versions_getGameVersionById
      tags:
        - CloudGamesVersions
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: version_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameVersionByIdOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/validate:
    post:
      description: Validates information used to create a new group.
      operationId: cloud_groups_validateGroup
      tags:
        - CloudGroups
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudValidateGroupOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudValidateGroupInput'
  /groups/{group_id}/billing:
    get:
      description: >-
        Returns billing information for the given group over the given query
        time span.
      operationId: cloud_groups_getGroupBilling
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: query_start
          in: query
          description: Unsigned 64 bit integer.
          required: false
          schema:
            type: number
            format: double
        - name: query_end
          in: query
          description: Unsigned 64 bit integer.
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetGroupBillingOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/billing/invoices:
    get:
      description: Returns a list of invoices for the given group.
      operationId: cloud_groups_getGroupInvoicesList
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Amount of invoices to return.
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetGroupInvoicesListOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/billing/payments:
    get:
      description: Returns a list of payments for the given group.
      operationId: cloud_groups_getGroupPaymentsList
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: start_payment_id
          in: query
          description: The payment ID of the payment after which to start listing.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetGroupPaymentsListOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/billing/transfers:
    get:
      description: Returns a list of bank transfers for the given group.
      operationId: cloud_groups_getGroupTransfersList
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: start_transfer_id
          in: query
          description: The transfer ID of the transfer after which to start listing.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetGroupTransfersListOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/checkout:
    post:
      description: Creates a checkout session for the given group.
      operationId: cloud_groups_groupBillingCheckout
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGroupBillingCheckoutOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGroupBillingCheckoutInput'
  /groups/{group_id}/convert:
    post:
      description: Converts the given group into a developer group.
      operationId: cloud_groups_convertGroup
      tags:
        - CloudGroups
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /rays/{ray_id}/perf:
    get:
      description: Returns performance information about a Rivet Ray.
      operationId: cloud_logs_getRayPerfLogs
      tags:
        - CloudLogs
      parameters:
        - name: ray_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRayPerfLogsOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /region-tiers:
    get:
      description: Returns all available region tiers.
      operationId: cloud_tiers_getRegionTiers
      tags:
        - CloudTiers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRegionTiersOutput'
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /uploads/{upload_id}/complete:
    post:
      description: Marks an upload as complete.
      operationId: cloud_uploads_completeUpload
      tags:
        - CloudUploads
      parameters:
        - name: upload_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /invites/{group_invite_code}:
    get:
      description: >-
        Inspects a group invite returning information about the team that
        created it.
      operationId: group_invites_getInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_invite_code
          in: path
          description: Provided by `rivet.api.group#CreateInviteOutput$code`.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetInviteOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /invites/{group_invite_code}/consume:
    post:
      description: Consumes a group invite to join a group.
      operationId: group_invites_consumeInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_invite_code
          in: path
          description: Provided by `rivet.api.group#CreateInviteOutput$code`.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupConsumeInviteOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/invites:
    post:
      description: >-
        Creates a group invite. Can be shared with other identities to let them
        join this group.
      operationId: group_invites_createInvite
      tags:
        - GroupInvites
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateInviteOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateInviteInput'
  /groups/{group_id}/join-request:
    post:
      description: Requests to join a group.
      operationId: group_joinRequests_createJoinRequest
      tags:
        - GroupJoinRequests
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/join-request/{identity_id}:
    post:
      description: Resolves a join request for a given group.
      operationId: group_joinRequests_resolveJoinRequest
      tags:
        - GroupJoinRequests
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupResolveJoinRequestInput'
  /events/live:
    get:
      description: Returns all events relative to the current identity.
      operationId: identity_events_watch
      tags:
        - IdentityEvents
      parameters:
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityWatchEventsOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /game-links:
    post:
      description: >
        Begins the process for linking an identity with the Rivet Hub.

        # Importance of Linking Identities

        When an identity is created via `rivet.api.identity#SetupIdentity`, the
        identity is temporary

        and is not shared with other games the user plays.

        In order to make the identity permanent and synchronize the identity
        with

        other games, the identity must be linked with the hub.

        # Linking Process

        The linking process works by opening `identity_link_url` in a browser
        then polling

        `rivet.api.identity#GetGameLink` to wait for it to complete.

        This is designed to be as flexible as possible so `identity_link_url`
        can be opened

        on any device. For example, when playing a console game, the user can
        scan a

        QR code for `identity_link_url` to authenticate on their phone.
      operationId: identity_links_prepare
      tags:
        - IdentityLinks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareGameLinkOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    get:
      description: >-
        Returns the current status of a linking process. Once `status` is
        `complete`, the identity's profile should be fetched again since they
        may have switched accounts.
      operationId: identity_links_get
      tags:
        - IdentityLinks
      parameters:
        - name: identity_link_token
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Jwt'
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetGameLinkOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /entries/batch:
    get:
      description: Gets multiple key-value entries by key(s).
      operationId: kv_batch_getBatch
      tags:
        - KvBatch
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
        - name: namespace_id
          in: query
          description: A universally unique identifier.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetBatchOutput'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
    put:
      description: Puts (sets or overwrites) multiple key-value entries by key(s).
      operationId: kv_batch_putBatch
      tags:
        - KvBatch
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutBatchInput'
    delete:
      description: Deletes multiple key-value entries by key(s).
      operationId: kv_batch_deleteBatch
      tags:
        - KvBatch
      parameters:
        - name: namespace_id
          in: query
          description: A universally unique identifier.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
  /lobbies/ready:
    post:
      description: >-
        Marks the current lobby as ready to accept connections.  Players will
        not be able to connect to this lobby until the  lobby is flagged as
        ready.
      operationId: matchmaker_lobbies_ready
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /lobbies/closed:
    put:
      description: >
        If `is_closed` is `true`, players will be prevented from joining the
        lobby.

        Does not shutdown the lobby.
      operationId: matchmaker_lobbies_setClosed
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: boolean
              required:
                - is_closed
  /lobbies/find:
    post:
      description: |
        Finds a lobby based on the given criteria.
        If a lobby is not found and `prevent_auto_create_lobby` is `true`, 
        a new lobby will be created.
      operationId: matchmaker_lobbies_find
      tags:
        - MatchmakerLobbies
      parameters:
        - name: origin
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerFindLobbyOutput'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_modes:
                  type: array
                  items:
                    type: string
                regions:
                  type: array
                  items:
                    type: string
                prevent_auto_create_lobby:
                  type: boolean
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
              required:
                - game_modes
  /lobbies/join:
    post:
      description: |
        Joins a specific lobby.
        This request will use the direct player count configured for the
        lobby group.
      operationId: matchmaker_lobbies_join
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerJoinLobbyOutput'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lobby_id:
                  type: string
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
              required:
                - lobby_id
  /lobbies/list:
    get:
      description: Lists all open lobbies.
      operationId: matchmaker_lobbies_list
      tags:
        - MatchmakerLobbies
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListLobbiesOutput'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /players/connected:
    post:
      description: >
        Validates the player token is valid and has not already been consumed
        then

        marks the player as connected.

        # Player Tokens and Reserved Slots

        Player tokens reserve a spot in the lobby until they expire. This allows
        for

        precise matchmaking up to exactly the lobby's player limit, which is

        important for games with small lobbies and a high influx of players.

        By calling this endpoint with the player token, the player's spot is
        marked

        as connected and will not expire. If this endpoint is never called, the

        player's token will expire and this spot will be filled by another
        player.

        # Anti-Botting

        Player tokens are only issued by caling `lobbies.join`, calling
        `lobbies.find`, or

        from the `GlobalEventMatchmakerLobbyJoin` event.

        These endpoints have anti-botting measures (i.e. enforcing max player

        limits, captchas, and detecting bots), so valid player tokens provide
        some

        confidence that the player is not a bot.

        Therefore, it's important to make sure the token is valid by waiting for

        this endpoint to return OK before allowing the connected socket to do

        anything else. If this endpoint returns an error, the socket should be

        disconnected immediately.

        # How to Transmit the Player Token

        The client is responsible for acquiring the player token by caling

        `lobbies.join`, calling `lobbies.find`, or from the
        `GlobalEventMatchmakerLobbyJoin`

        event.  Beyond that, it's up to the developer how the player token is

        transmitted to the lobby.

        If using WebSockets, the player token can be transmitted as a query

        parameter.

        Otherwise, the player token will likely be automatically sent by the
        client

        once the socket opens. As mentioned above, nothing else should happen
        until

        the player token is validated.
      operationId: matchmaker_players_connected
      tags:
        - MatchmakerPlayers
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_token:
                  type: string
              required:
                - player_token
  /players/disconnected:
    post:
      description: >-
        Marks a player as disconnected. # Ghost Players If players are not
        marked as disconnected, lobbies will result with "ghost players" that
        the matchmaker thinks exist but are no longer connected to the lobby.
      operationId: matchmaker_players_disconnected
      tags:
        - MatchmakerPlayers
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_token:
                  type: string
              required:
                - player_token
  /regions:
    get:
      description: >
        Returns a list of regions available to this namespace.

        Regions are sorted by most optimal to least optimal. The player's IP
        address

        is used to calculate the regions' optimality.
      operationId: matchmaker_regions_list
      tags:
        - MatchmakerRegions
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListRegionsOutput'
      servers:
        - url: https://matchmaker.api.rivet.gg/v1
      security: *ref_0
  /parties/self/activity/matchmaker/lobbies/find:
    post:
      description: >-
        Attempts to make the current identity's party find a lobby based on the
        given criteria. If succeeds, all party members will receive a
        `GlobalEventMatchmakerLobbyJoin` event with all the information required
        to join the lobby. This request will use the party player count
        configured for the lobby group. See `FindLobby`.
      operationId: party_activity_matchmaker_findLobbyForParty
      tags:
        - PartyActivityMatchmaker
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PartyActivityFindMatchmakerLobbyForPartyInput
  /parties/self/activity/matchmaker/lobbies/join:
    post:
      description: >-
        Attempts to make the current identity's party join a specific matchmaker
        lobby. This request will use the party player count configured for the
        lobby group. If succeeds, all party members will receive a
        `GlobalEventMatchmakerLobbyJoin` event with all the information required
        to join the lobby. Identity must be the party leader. See `JoinLobby`.
      operationId: party_activity_matchmaker_joinLobbyForParty
      tags:
        - PartyActivityMatchmaker
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PartyActivityJoinMatchmakerLobbyForPartyInput
  /parties/self/members/self/matchmaker/request-player:
    post:
      operationId: party_activity_matchmaker_requestPlayer
      tags:
        - PartyActivityMatchmaker
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /invites:
    get:
      description: Fetches a party based on a given invite.
      operationId: party_parties_getFromInvite
      tags:
        - PartyParties
      parameters:
        - name: token
          in: query
          description: See `rivet.api.party#CreatedInvite$token`.
          required: false
          schema:
            type: string
        - name: alias
          in: query
          description: >-
            An alias used to join a given party. This alias must be unique for
            all invites for your game. Pass this alias to
            `rivet.api.party.common#CreatedInvite$alias` to consume the invite.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyGetInviteOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties:
    post:
      description: Creates a new party.
      operationId: party_parties_create
      tags:
        - PartyParties
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyCreateOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyCreateInput'
  /parties/join:
    post:
      description: Joins a party using a given party invite.
      operationId: party_parties_join
      tags:
        - PartyParties
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyJoinOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyJoinInput'
  /parties/self/invites:
    post:
      description: |-
        Creates a new party invite for the current identity's party.
        Identity must be the party leader.
      operationId: party_parties_createInvite
      tags:
        - PartyParties
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyCreateInviteOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyCreateInviteInput'
  /parties/self/invites/{invite_id}:
    delete:
      description: |-
        Revokes a party invite from the current identity's party.
        Identity must be the party leader.
      operationId: party_parties_revokeInvite
      tags:
        - PartyParties
      parameters:
        - name: invite_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/self/leave:
    post:
      description: Leaves the current identity's party.
      operationId: party_parties_leave
      tags:
        - PartyParties
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/self/members/{identity_id}/kick:
    post:
      description: |-
        Kicks a member from the current identity's current party.
        Identity must be the party leader.
      operationId: party_parties_kickMember
      tags:
        - PartyParties
      parameters:
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/self/members/{identity_id}/transfer-ownership:
    post:
      description: |-
        Transfers ownership of the party to another party member.
        Identity must be the party leader.
      operationId: party_parties_transferOwnership
      tags:
        - PartyParties
      parameters:
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/self/profile:
    get:
      description: >-
        Returns a party profile for the party the current identity is a member
        of.
      operationId: party_parties_getSelfProfile
      tags:
        - PartyParties
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyGetSelfProfileOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/self/publicity:
    put:
      description: |-
        Sets the publicity of a party.
        This configures who can view and join the party.
        Identity must be the party leader.
      operationId: party_parties_setPublicity
      tags:
        - PartyParties
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartySetPublicityInput'
  /parties/self/summary:
    get:
      description: >-
        Returns a party summary for the party the current identity is a member
        of.
      operationId: party_parties_getSelfSummary
      tags:
        - PartyParties
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyGetSelfSummaryOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/{party_id}/join-request/send:
    post:
      operationId: party_parties_sendJoinRequest
      tags:
        - PartyParties
      parameters:
        - name: party_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/{party_id}/profile:
    get:
      description: Returns a party profile.
      operationId: party_parties_getProfile
      tags:
        - PartyParties
      parameters:
        - name: party_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyGetProfileOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /parties/{party_id}/summary:
    get:
      description: Returns a party summary.
      operationId: party_parties_getSummary
      tags:
        - PartyParties
      parameters:
        - name: party_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyGetSummaryOutput'
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
  /messages:
    post:
      description: Sends a chat message to a given topic.
      operationId: chat_sendMessage
      tags:
        - Chat
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSendMessageOutput'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSendMessageInput'
  /threads/{thread_id}/history:
    get:
      description: |-
        Returns message history for a given thread in a certain direction.
        Defaults to querying messages before ts.
      operationId: chat_getThreadHistory
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: ts
          in: query
          description: RFC3339 timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: count
          in: query
          description: >-
            How many messages to collect in each direction. If querying
            `rivet.api.chat.common#QueryDirection$before_and_after`,
            `rivet.api.chat.common#QueryDirection$chat_messages` will be `count
            * 2`.
          required: true
          schema:
            type: number
            format: double
        - name: query_direction
          in: query
          description: >-
            Represents which direction to query messages from relative to the
            given timestamp.
          required: false
          schema:
            $ref: '#/components/schemas/ChatQueryDirection'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetThreadHistoryOutput'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/live:
    get:
      description: |-
        Fetches all relevant changes from a thread that have happened since the
        given watch index.
      operationId: chat_watchThread
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatWatchThreadOutput'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/read:
    post:
      description: Updates the current identity's last read timestamp in the given thread.
      operationId: chat_setThreadRead
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSetThreadReadInput'
  /threads/{thread_id}/topic:
    get:
      description: Fetches the topic of a thread.
      operationId: chat_getThreadTopic
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetThreadTopicOutput'
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
  /threads/{thread_id}/typing-status:
    put:
      description: Updates the current identity's typing status in the given thread.
      operationId: chat_setTypingStatus
      tags:
        - Chat
      parameters:
        - name: thread_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://chat.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSetTypingStatusInput'
  /games/{game_id}/namespaces:
    post:
      description: Creates a new namespace for the given game.
      operationId: cloud_games_namespaces_createGameNamespace
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesCreateGameNamespaceInput
  /games/{game_id}/namespaces/validate:
    post:
      description: Validates information used to create a new game namespace.
      operationId: cloud_games_namespaces_validateGameNamespace
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceInput
  /games/{game_id}/namespaces/{namespace_id}:
    get:
      description: Gets a game namespace by namespace ID.
      operationId: cloud_games_namespaces_getGameNamespaceById
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesGetGameNamespaceByIdOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/auth-user:
    post:
      description: Adds an authenticated user to the given game namespace.
      operationId: cloud_games_namespaces_updateNamespaceCdnAuthUser
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateNamespaceCdnAuthUserInput
  /games/{game_id}/namespaces/{namespace_id}/auth-user/{user}:
    delete:
      description: Removes an authenticated user from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceCdnAuthUser
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: user
          in: path
          description: A user name.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/cdn-auth:
    put:
      description: Updates the CDN authentication type of the given game namesapce.
      operationId: cloud_games_namespaces_setNamespaceCdnAuthType
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesSetNamespaceCdnAuthTypeInput
  /games/{game_id}/namespaces/{namespace_id}/domain-public-auth:
    put:
      description: >-
        Toggles whether or not to allow authentication based on domain for the
        given game namesapce.
      operationId: cloud_games_namespaces_toggleNamespaceDomainPublicAuth
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesToggleNamespaceDomainPublicAuthInput
  /games/{game_id}/namespaces/{namespace_id}/domains:
    post:
      description: Adds a domain to the given game namespace.
      operationId: cloud_games_namespaces_addNamespaceDomain
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesAddNamespaceDomainInput'
  /games/{game_id}/namespaces/{namespace_id}/domains/{domain}:
    delete:
      description: Removes a domain from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceDomain
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: A valid domain name (no protocol).
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/mm-config:
    post:
      description: Updates matchmaker config for the given game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceMatchmakerConfig
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigInput
  /games/{game_id}/namespaces/{namespace_id}/mm-config/validate:
    post:
      description: >-
        Validates information used to update a game namespace's matchmaker
        config.
      operationId: cloud_games_namespaces_validateGameNamespaceMatchmakerConfig
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigInput
  /games/{game_id}/namespaces/{namespace_id}/tokens/development:
    post:
      description: Creates a development token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenDevelopment
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentInput
  /games/{game_id}/namespaces/{namespace_id}/tokens/development/validate:
    post:
      description: >-
        Validates information used to create a new game namespace development
        token.
      operationId: cloud_games_namespaces_validateGameNamespaceTokenDevelopment
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentInput
  /games/{game_id}/namespaces/{namespace_id}/tokens/public:
    post:
      description: Creates a public token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenPublic
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenPublicOutput
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
  /games/{game_id}/namespaces/{namespace_id}/version:
    put:
      description: Updates the version of a game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceVersion
      tags:
        - CloudGamesNamespaces
      parameters:
        - name: game_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://cloud.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudGamesNamespacesUpdateGameNamespaceVersionInput
  /groups:
    get:
      description: Returns a list of suggested groups.
      operationId: group_listSuggested
      tags:
        - Group
      parameters:
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListSuggestedOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Creates a new group.
      operationId: group_create
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateInput'
  /groups/avatar-upload/prepare:
    post:
      description: |-
        Prepares an avatar image upload.
        Complete upload with `rivet.api.group#CompleteAvatarUpload`.
      operationId: group_prepareAvatarUpload
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPrepareAvatarUploadOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPrepareAvatarUploadInput'
  /groups/profile/validate:
    post:
      description: >-
        Validate contents of group profile. Use to provide immediate feedback on
        profile changes before committing them.
      operationId: group_validateProfile
      tags:
        - Group
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupValidateProfileOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupValidateProfileInput'
  /groups/search:
    get:
      description: Fuzzy search for groups.
      operationId: group_search
      tags:
        - Group
      parameters:
        - name: query
          in: query
          description: The query to match group display names against.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Unsigned 32 bit integer.
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/avatar-upload/{upload_id}/complete:
    post:
      description: |-
        Completes an avatar image upload. Must be called after the file upload
        process completes.
        Call `rivet.api.group#PrepareAvatarUpload` first.
      operationId: group_completeAvatarUpload
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: upload_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/bans:
    get:
      description: Returns a group's bans. Must have valid permissions to view.
      operationId: group_getBans
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of bans to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetBansOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/bans/{identity_id}:
    post:
      description: >-
        Bans an identity from a group. Must be the owner of the group to perform
        this action. The banned identity will no longer be able to create a join
        request or use a group invite.
      operationId: group_banIdentity
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    delete:
      description: >-
        Unbans an identity from a group. Must be the owner of the group to
        perform this action.
      operationId: group_unbanIdentity
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/join-requests:
    get:
      description: Returns a group's join requests. Must have valid permissions to view.
      operationId: group_getJoinRequests
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of join requests to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetJoinRequestsOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/kick/{identity_id}:
    post:
      description: >-
        Kicks an identity from a group. Must be the owner of the group to
        perform this action.
      operationId: group_kickMember
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: identity_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/leave:
    post:
      description: Leaves a group.
      operationId: group_leave
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/members:
    get:
      description: Returns a group's members.
      operationId: group_getMembers
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: >-
            The pagination anchor. Set to the returned anchor of this endpoint
            to receive the next set of items.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: Amount of members to return.
          required: false
          schema:
            type: number
            format: double
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetMembersOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/profile:
    get:
      description: Returns a group profile.
      operationId: group_getProfile
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetProfileOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
    post:
      operationId: group_updateProfile
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateProfileInput'
  /groups/{group_id}/summary:
    get:
      operationId: group_getSummary
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetSummaryOutput'
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
  /groups/{group_id}/transfer-owner:
    post:
      description: Transfers ownership of a group to another identity.
      operationId: group_transferOwnership
      tags:
        - Group
      parameters:
        - name: group_id
          in: path
          description: A universally unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://group.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupTransferOwnershipInput'
  /identities:
    post:
      description: >-
        Gets or creates an identity.

        Passing an existing identity token in the body refreshes the token.

        Temporary Accounts

        Until the identity is linked with the Rivet Hub (see `PrepareGameLink`),
        this identity will be temporary but still behave like all other
        identities.

        This is intended to allow users to play the game without signing up
        while still having the benefits of having an account. When they are
        ready to save their account, they should be instructed to link their
        account (see `PrepareGameLink`).

        Storing Token

        `identity_token` should be stored in some form of persistent storage.
        The token should be read from storage and passed to `Setup` every time
        the client starts.
      operationId: identity_setup
      tags:
        - Identity
      parameters:
        - name: identity_link_token
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Jwt'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySetupOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/{identity_id}/profile:
    get:
      description: Fetches an identity profile.
      operationId: identity_getProfile
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/profile:
    get:
      description: Fetches the current identity's profile.
      operationId: identity_getSelfProfile
      tags:
        - Identity
      parameters:
        - name: watch_index
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    post:
      description: Updates profile of the current identity.
      operationId: identity_updateProfile
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  $ref: '#/components/schemas/DisplayName'
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
  /identities/batch/handle:
    get:
      description: Fetches a list of identity handles.
      operationId: identity_getHandles
      tags:
        - Identity
      parameters:
        - name: identity_ids
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetHandlesOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/batch/summary:
    get:
      description: Fetches a list of identity summaries.
      operationId: identity_getSummaries
      tags:
        - Identity
      parameters:
        - name: identity_ids
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetSummariesOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/profile/validate:
    post:
      description: >-
        Validate contents of identity profile. Use to provide immediate feedback
        on profile changes before committing them.
      operationId: identity_validateProfile
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  $ref: '#/components/schemas/DisplayName'
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
  /identities/search:
    get:
      description: Fuzzy search for identities.
      operationId: identity_search
      tags:
        - Identity
      parameters:
        - name: query
          in: query
          description: >-
            The query to match identity display names and account numbers
            against.
          required: true
          schema:
            type: string
        - name: anchor
          in: query
          description: How many identities to offset the search by.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Amount of identities to return. Must be between 1 and 32 inclusive.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySearchOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/activity:
    post:
      description: >-
        Sets the current identity's game activity. This activity will
        automatically be removed when the identity goes offline.
      operationId: identity_setGameActivity
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_activity:
                  $ref: '#/components/schemas/IdentityUpdateGameActivity'
              required:
                - game_activity
    delete:
      description: Removes the current identity's game activity.
      operationId: identity_removeGameActivity
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/identities/self/status:
    post:
      description: Updates the current identity's status.
      operationId: identity_updateStatus
      tags:
        - Identity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/IdentityStatus'
              required:
                - status
  /identities/{identity_id}/follow:
    post:
      description: >-
        Follows the given identity. In order for identities to be "friends", the
        other identity has to also follow this identity.
      operationId: identity_follow
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
    delete:
      description: Unfollows the given identity.
      operationId: identity_unfollow
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/avatar-upload/prepare:
    post:
      description: >-
        Prepares an avatar image upload. Complete upload with
        `CompleteIdentityAvatarUpload`.
      operationId: identity_prepareAvatarUpload
      tags:
        - Identity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareAvatarUploadOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                mime:
                  type: string
                  description: >-
                    See
                    https://www.iana.org/assignments/media-types/media-types.xhtml
                content_length:
                  type: integer
                  format: int64
              required:
                - path
                - mime
                - content_length
  /identities/avatar-upload/{upload_id}/complete:
    post:
      description: >-
        Completes an avatar image upload. Must be called after the file upload
        process completes.
      operationId: identity_completeAvatarUpload
      tags:
        - Identity
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/{identity_id}/report:
    post:
      description: Creates an abuse report for an identity.
      operationId: identity_report
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
              required:
                - reason
  /identities/{identity_id}/followers:
    get:
      operationId: identity_listFollowers
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFollowersOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/self/friends:
    get:
      operationId: identity_listFriends
      tags:
        - Identity
      parameters:
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFriendsOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /identities/{identity_id}/mutual-friends:
    get:
      operationId: identity_listMutualFriends
      tags:
        - Identity
      parameters:
        - name: identity_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: anchor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Range is between 1 and 32 (inclusive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListMutualFriendsOutput'
      servers:
        - url: https://identity.api.rivet.gg/v1
      security: *ref_0
  /entries:
    get:
      description: Returns a specific key-value entry by key.
      operationId: kv_get
      tags:
        - Kv
      parameters:
        - name: key
          in: query
          description: >-
            A string representing a key in the key-value database. Key path
            components are split by a slash (e.g. `a/b/c` has the path
            components `["a", "b", "c"]`). Slashes can be escaped by using a
            forward slash (e.g. `a/b\/c/d` has the path components `["a", "b/c",
            "d"]`). See `rivet.api.kv.common#KeyComponents` for the structure of
            a `rivet.api.kv.common#Key` split by `/`.
          required: true
          schema:
            type: string
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
        - name: namespace_id
          in: query
          description: A universally unique identifier.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetOutput'
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
    put:
      description: Puts (sets or overwrites) a key-value entry by key.
      operationId: kv_put
      tags:
        - Kv
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutInput'
    delete:
      description: Deletes a key-value entry by key.
      operationId: kv_delete
      tags:
        - Kv
      parameters:
        - name: key
          in: query
          description: >-
            A string representing a key in the key-value database. Key path
            components are split by a slash (e.g. `a/b/c` has the path
            components `["a", "b", "c"]`). Slashes can be escaped by using a
            forward slash (e.g. `a/b\/c/d` has the path components `["a", "b/c",
            "d"]`). See `rivet.api.kv.common#KeyComponents` for the structure of
            a `rivet.api.kv.common#Key` split by `/`.
          required: true
          schema:
            type: string
        - name: namespace_id
          in: query
          description: A universally unique identifier.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: ''
      servers:
        - url: https://kv.api.rivet.gg/v1
      security: *ref_0
  /parties/self/activity:
    delete:
      description: |-
        Sets the activity of the current identity's party to idle.
        Identity must be the party leader.
      operationId: party_activity_setPartyToIdle
      tags:
        - PartyActivity
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://party.api.rivet.gg/v1
      security: *ref_0
components:
  schemas:
    CaptchaConfig:
      type: object
      description: Methods to verify a captcha
      properties:
        hcaptcha:
          $ref: '#/components/schemas/CaptchaConfigHcaptcha'
        turnstile:
          $ref: '#/components/schemas/CaptchaConfigTurnstile'
    CaptchaConfigHcaptcha:
      type: object
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
        - client_response
    CaptchaConfigTurnstile:
      type: object
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
        - client_response
    ChatSendTopic:
      type: object
      description: Topic to send a chat message to.
      properties:
        thread_id:
          type: string
          format: uuid
        group_id:
          type: string
          format: uuid
        party_id:
          type: string
          format: uuid
        identity_id:
          type: string
          format: uuid
    ChatSendMessageBody:
      type: object
      description: Data to send in a chat message.
      properties:
        text:
          $ref: '#/components/schemas/ChatSendMessageBodyText'
        party_invite:
          $ref: '#/components/schemas/ChatSendMessageBodyPartyInvite'
    ChatSendMessageBodyText:
      type: object
      description: The text in the text message.
      properties:
        body:
          type: string
      required:
        - body
    ChatSendMessageBodyPartyInvite:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/Jwt'
      required:
        - token
    ChatQueryDirection:
      type: string
      enum:
        - before
        - after
        - before_and_after
    ChatThread:
      type: object
      description: A chat thread
      properties:
        thread_id:
          type: string
          format: uuid
        create_ts:
          $ref: '#/components/schemas/Timestamp'
        topic:
          $ref: '#/components/schemas/ChatTopic'
        tail_message:
          $ref: '#/components/schemas/ChatMessage'
        last_read_ts:
          $ref: '#/components/schemas/Timestamp'
        unread_count:
          type: integer
        external:
          $ref: '#/components/schemas/ChatThreadExternalLinks'
      required:
        - thread_id
        - create_ts
        - topic
        - last_read_ts
        - unread_count
        - external
    ChatMessage:
      type: object
      properties:
        chat_message_id:
          type: string
          format: uuid
        thread_id:
          type: string
          format: uuid
        send_ts:
          $ref: '#/components/schemas/Timestamp'
      required:
        - chat_message_id
        - thread_id
        - send_ts
    ChatTopic:
      type: object
      description: Represents the topic of the given chat thread.
      properties:
        group:
          $ref: '#/components/schemas/ChatTopicGroup'
        party:
          $ref: '#/components/schemas/ChatTopicParty'
        direct:
          $ref: '#/components/schemas/ChatTopicDirect'
    ChatTopicGroup:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    ChatTopicParty:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartyHandle'
      required:
        - party
    ChatTopicDirect:
      type: object
      properties:
        identity_a:
          $ref: '#/components/schemas/IdentityHandle'
        identity_b:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity_a
        - identity_b
    ChatSimpleTopic:
      type: object
      description: >
        Represents a topic of the given chat thread without the associated
        handles

        for the topic.
      properties:
        group:
          $ref: '#/components/schemas/ChatSimpleTopicGroup'
        party:
          $ref: '#/components/schemas/ChatSimpleTopicParty'
        direct:
          $ref: '#/components/schemas/ChatSimpleTopicDirect'
    ChatSimpleTopicGroup:
      type: object
      properties:
        group:
          type: string
          format: uuid
      required:
        - group
    ChatSimpleTopicParty:
      type: object
      properties:
        party:
          type: string
          format: uuid
      required:
        - party
    ChatSimpleTopicDirect:
      type: object
      properties:
        identity_a:
          type: string
          format: uuid
        identity_b:
          type: string
          format: uuid
      required:
        - identity_a
        - identity_b
    ChatThreadExternalLinks:
      type: object
      properties:
        chat:
          type: string
      required:
        - chat
    ChatTypingStatus:
      type: object
      properties:
        idle:
          $ref: '#/components/schemas/EmptyObject'
          description: Not typing
        typing:
          $ref: '#/components/schemas/EmptyObject'
          description: Typing
    ChatIdentityTypingStatus:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        status:
          $ref: '#/components/schemas/ChatTypingStatus'
      required:
        - identity
        - status
    ChatGetDirectThreadOutput:
      type: object
      properties:
        thread_id:
          type: string
          description: A universally unique identifier.
        identity:
          $ref: '#/components/schemas/IdentityHandle'
    CloudInspectOutput:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/CloudAuthAgent'
      required:
        - agent
    CloudSvcPerf:
      type: object
      description: A service performance summary.
      properties:
        svc_name:
          type: string
          description: The name of the service.
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        duration:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        req_id:
          type: string
          description: A universally unique identifier.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsPerfSpan'
          description: A list of performance spans.
        marks:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsPerfMark'
          description: A list of performance marks.
      required:
        - svc_name
        - ts
        - duration
        - spans
        - marks
    CloudLogsPerfSpan:
      type: object
      description: A performance span.
      properties:
        label:
          type: string
          description: The label given to this performance span.
        start_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        finish_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        req_id:
          type: string
          description: A universally unique identifier.
      required:
        - label
        - start_ts
    CloudLogsPerfMark:
      type: object
      description: A performance mark.
      properties:
        label:
          type: string
          description: The label given to this performance mark.
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        ray_id:
          type: string
          description: A universally unique identifier.
        req_id:
          type: string
          description: A universally unique identifier.
      required:
        - label
        - ts
    CloudAnalyticsLobbySummary:
      type: object
      description: Analytical information about a lobby.
      properties:
        lobby_id:
          type: string
          description: A universally unique identifier.
        lobby_group_id:
          type: string
          description: A universally unique identifier.
        lobby_group_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        region_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        is_ready:
          type: boolean
          description: Whether or not this lobby is ready.
        is_idle:
          type: boolean
          description: Whether or not this lobby is idle.
        is_closed:
          type: boolean
          description: Whether or not this lobby is in a closed state.
        is_outdated:
          type: boolean
          description: Whether or not this lobby is outdated.
        max_players_normal:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_direct:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_party:
          type: integer
          description: Unsigned 32 bit integer.
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        registered_player_count:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_id
        - lobby_group_id
        - lobby_group_name_id
        - region_id
        - create_ts
        - is_ready
        - is_idle
        - is_closed
        - is_outdated
        - max_players_normal
        - max_players_direct
        - max_players_party
        - total_player_count
        - registered_player_count
    CloudLogsLobbySummary:
      type: object
      description: A logs summary for a lobby.
      properties:
        lobby_id:
          type: string
          description: A universally unique identifier.
        namespace_id:
          type: string
          description: A universally unique identifier.
        lobby_group_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        region_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        start_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        ready_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        status:
          $ref: '#/components/schemas/CloudLogsLobbyStatus'
      required:
        - lobby_id
        - namespace_id
        - lobby_group_name_id
        - region_id
        - create_ts
        - status
    CloudLogsLobbyStatus:
      type: object
      description: A union representing the state of a lobby.
      properties:
        running:
          $ref: '#/components/schemas/EmptyObject'
        stopped:
          $ref: '#/components/schemas/CloudLogsLobbyStatusStopped'
      required:
        - running
    CloudLogsLobbyStatusStopped:
      type: object
      description: The status of a stopped lobby.
      properties:
        stop_ts:
          type: string
          format: date-time
        failed:
          type: boolean
          description: Whether or not the lobby failed or stopped successfully.
        exit_code:
          type: integer
          description: The exit code returned by the lobby's main process when stopped.
      required:
        - stop_ts
        - failed
        - exit_code
    CloudSvcMetrics:
      type: object
      description: Metrics relating to a job service.
      properties:
        job:
          type: string
          description: The job name.
        cpu:
          type: array
          items:
            type: number
            format: double
          description: CPU metrics.
        memory:
          type: array
          items:
            type: number
            format: double
          description: Memory metrics.
        memory_max:
          type: array
          items:
            type: number
            format: double
          description: Peak memory metrics.
        allocated_memory:
          type: number
          format: double
          description: Total allocated memory (MB).
      required:
        - job
        - cpu
        - memory
        - memory_max
    CloudAuthAgent:
      type: object
      description: The current authenticated agent.
      properties:
        identity:
          $ref: '#/components/schemas/CloudAuthAgentIdentity'
        game_cloud:
          $ref: '#/components/schemas/CloudAuthAgentGameCloud'
    CloudAuthAgentIdentity:
      type: object
      description: The current authenticated identity.
      properties:
        identity_id:
          type: string
          format: uuid
      required:
        - identity_id
    CloudAuthAgentGameCloud:
      type: object
      description: The current authenticated game cloud.
      properties:
        game_id:
          type: string
          format: uuid
      required:
        - game_id
    CloudCustomAvatarSummary:
      type: object
      description: A custom avatar summary.
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        url:
          type: string
          description: >-
            The URL of this custom avatar image. Only present if upload is
            complete.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this custom avatar has completely been uploaded.
      required:
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudBuildSummary:
      type: object
      description: A build summary.
      properties:
        build_id:
          type: string
          description: A universally unique identifier.
        upload_id:
          type: string
          description: A universally unique identifier.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this build has completely been uploaded.
      required:
        - build_id
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudCdnSiteSummary:
      type: object
      description: A CDN site summary.
      properties:
        site_id:
          type: string
          description: A universally unique identifier.
        upload_id:
          type: string
          description: A universally unique identifier.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        complete:
          type: boolean
          description: Whether or not this site has completely been uploaded.
      required:
        - site_id
        - upload_id
        - display_name
        - create_ts
        - content_length
        - complete
    CloudGameFull:
      type: object
      description: A full game.
      properties:
        game_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          description: A universally unique identifier.
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        logo_url:
          type: string
          description: The URL of this game's logo image.
        banner_url:
          type: string
          description: The URL of this game's banner image.
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/CloudNamespaceSummary'
          description: A list of namespace summaries.
        versions:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionSummary'
          description: A list of version summaries.
        available_regions:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionSummary'
          description: A list of region summaries.
      required:
        - game_id
        - create_ts
        - name_id
        - display_name
        - developer_group_id
        - total_player_count
        - namespaces
        - versions
        - available_regions
    CloudNamespaceSummary:
      type: object
      description: A namespace summary.
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          description: A universally unique identifier.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - namespace_id
        - create_ts
        - display_name
        - version_id
        - name_id
    CloudRegionSummary:
      type: object
      description: A region summary.
      properties:
        region_id:
          type: string
          description: A universally unique identifier.
        region_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        provider:
          type: string
          description: The server provider of this region.
        universal_region:
          type: number
          format: double
          description: A universal number given to this region.
        provider_display_name:
          type: string
          description: Represent a resource's readable display name.
        region_display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - region_id
        - region_name_id
        - provider
        - universal_region
        - provider_display_name
        - region_display_name
    CloudGroupBillingSummary:
      type: object
      description: A group billing summary.
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/CloudGameLobbyExpenses'
          description: A list of multiple game lobby expenses.
        balance:
          type: number
          format: double
          description: A group's available balance.
      required:
        - games
        - balance
    CloudGameLobbyExpenses:
      type: object
      description: Game lobby expenses.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/CloudNamespaceSummary'
          description: A list of namespace summaries.
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionTierExpenses'
          description: A list of multiple region tier expenses.
      required:
        - game
        - namespaces
        - expenses
    CloudRegionTierExpenses:
      type: object
      description: Region tier expenses.
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        region_id:
          type: string
          description: A universally unique identifier.
        tier_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        lobby_group_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        uptime:
          type: number
          format: double
          description: How long a region tier has been active (in milliseconds).
        expenses:
          type: number
          format: double
          description: >-
            Amount of expenses for this region tier (in hundred-thousandths USD,
            100,000 = $1.00).
      required:
        - namespace_id
        - region_id
        - tier_name_id
        - lobby_group_name_id
        - uptime
        - expenses
    CloudGroupBankSource:
      type: object
      properties:
        account_number:
          type: string
          description: The bank account number of this group's bank source.
        routing_number:
          type: string
          description: The bank routing number of this group's bank source.
      required:
        - account_number
        - routing_number
    CloudGroupBillingInvoice:
      type: object
      description: A group's billing invoice.
      properties:
        csv_url:
          type: string
          description: A URL to this invoice's CSV breakdown.
        pdf_url:
          type: string
          description: A URL to this invoice's PDF document.
        period_start_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        period_end_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - csv_url
        - pdf_url
        - period_start_ts
        - period_end_ts
    CloudGroupBillingPayment:
      type: object
      description: A group's billing payment.
      properties:
        amount:
          type: number
          format: double
          description: Payment amount (in hundreths USD, 100 = $1.00).
        description:
          type: string
          description: A description of this payment.
        from_invoice:
          type: boolean
          description: Whether or not this payment is from an invoice.
        created_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        status:
          $ref: '#/components/schemas/CloudGroupBillingStatus'
      required:
        - amount
        - from_invoice
        - created_ts
        - status
    CloudGroupBillingStatus:
      type: string
      enum:
        - succeeded
        - processing
        - refunded
      description: A value denoting the status of a billing transfer.
    CloudGroupBillingTransfer:
      type: object
      description: A group's billing transfer.
      properties:
        amount:
          type: integer
          format: int64
          description: Payment amount (in hundreths USD, 100 = $1.00).
        description:
          type: string
          description: A description of this transfer.
        created_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        status:
          $ref: '#/components/schemas/CloudGroupBillingStatus'
      required:
        - amount
        - created_ts
        - status
    CloudRegionTier:
      type: object
      description: A region server tier.
      properties:
        tier_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        rivet_cores_numerator:
          type: integer
          description: >-
            Together with the denominator, denotes the portion of the CPU a
            given server uses.
        rivet_cores_denominator:
          type: integer
          description: >-
            Together with the numerator, denotes the portion of the CPU a given
            server uses.
        cpu:
          type: integer
          description: CPU frequency (MHz).
        memory:
          type: integer
          description: Allocated memory (MB).
        disk:
          type: integer
          description: Allocated disk space (MB).
        bandwidth:
          type: integer
          description: Internet bandwidth (MB).
        price_per_second:
          type: integer
          description: >-
            Price billed for every second this server is running (in
            quadrillionth USD, 1,000,000,000,000 = $1.00).
      required:
        - tier_name_id
        - rivet_cores_numerator
        - rivet_cores_denominator
        - cpu
        - memory
        - disk
        - bandwidth
        - price_per_second
    CloudNamespaceFull:
      type: object
      description: A full namespace.
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          description: A universally unique identifier.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        config:
          $ref: '#/components/schemas/CloudNamespaceConfig'
      required:
        - namespace_id
        - create_ts
        - display_name
        - version_id
        - name_id
        - config
    CloudNamespaceConfig:
      type: object
      description: Cloud configuration for a given namespace.
      properties:
        cdn:
          $ref: '#/components/schemas/CloudCdnNamespaceConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudMatchmakerNamespaceConfig'
        kv:
          $ref: '#/components/schemas/CloudKvNamespaceConfig'
        identity:
          $ref: '#/components/schemas/CloudIdentityNamespaceConfig'
      required:
        - cdn
        - matchmaker
        - kv
        - identity
    CloudCdnNamespaceConfig:
      type: object
      description: CDN configuration for a given namespace.
      properties:
        enable_domain_public_auth:
          type: boolean
          description: >-
            Whether or not to allow users to connect to the given namespace via
            domain name.
        domains:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceDomain'
          description: A list of CDN domains for a given namespace.
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
        auth_user_list:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceAuthUser'
          description: A list of CDN authenticated users for a given namespace.
      required:
        - enable_domain_public_auth
        - domains
        - auth_type
        - auth_user_list
    CloudMatchmakerNamespaceConfig:
      type: object
      description: Matchmaker configuration for a given namespace.
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_vpn:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_proxy:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_tor:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_per_client_hosting:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players_per_client
        - max_players_per_client_vpn
        - max_players_per_client_proxy
        - max_players_per_client_tor
        - max_players_per_client_hosting
    CloudKvNamespaceConfig:
      type: object
      description: KV configuration for a given namespace.
      properties: {}
    CloudIdentityNamespaceConfig:
      type: object
      description: Identity configuration for a given namespace.
      properties: {}
    CloudCdnAuthType:
      type: string
      enum:
        - none
        - basic
      description: >-
        A value denoting what type of authentication to use for a game
        namespace's CDN.
    CloudCdnNamespaceDomain:
      type: object
      description: A CDN domain for a given namespace.
      properties:
        domain:
          type: string
          description: A valid domain name (no protocol).
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        verification_status:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationStatus'
        verification_method:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethod'
        verification_errors:
          type: array
          items:
            type: string
      required:
        - domain
        - create_ts
        - verification_status
        - verification_method
        - verification_errors
    CloudCdnNamespaceDomainVerificationMethod:
      type: object
      description: A union representing the verification method used for this CDN domain.
      properties:
        invalid:
          $ref: '#/components/schemas/EmptyObject'
        http:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethodHttp'
    CloudCdnNamespaceDomainVerificationMethodHttp:
      type: object
      properties:
        cname_record:
          type: string
      required:
        - cname_record
    CloudCdnNamespaceDomainVerificationStatus:
      type: string
      enum:
        - active
        - pending
        - failed
      description: A value denoting the status of a CDN domain's verification status.
    CloudCdnNamespaceAuthUser:
      type: object
      description: An authenticated CDN user for a given namespace.
      properties:
        user:
          type: string
          description: A user name.
      required:
        - user
    CloudMatchmakerDevelopmentPort:
      type: object
      description: A port configuration used to create development tokens.
      properties:
        port:
          type: integer
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyProtocol'
      required:
        - port
        - protocol
    CloudDevicesPrepareDeviceLinkOutput:
      type: object
      properties:
        device_link_id:
          type: string
          format: uuid
        device_link_token:
          type: string
        device_link_url:
          type: string
      required:
        - device_link_id
        - device_link_token
        - device_link_url
    CloudDevicesGetDeviceLinkOutput:
      type: object
      properties:
        cloud_token:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - watch
    CloudGamesListGameCustomAvatarsOutput:
      type: object
      properties:
        custom_avatars:
          type: array
          items:
            $ref: '#/components/schemas/CloudCustomAvatarSummary'
          description: A list of custom avatar summaries.
      required:
        - custom_avatars
    CloudGamesPrepareCustomAvatarUploadInput:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the custom avatar.
        mime:
          type: string
          description: The MIME type of the custom avatar.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
    CloudGamesPrepareCustomAvatarUploadOutput:
      type: object
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesListGameBuildsOutput:
      type: object
      properties:
        builds:
          type: array
          items:
            $ref: '#/components/schemas/CloudBuildSummary'
          description: A list of build summaries.
      required:
        - builds
    CloudGamesCreateGameBuildInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        image_tag:
          type: string
          description: A tag given to the game build.
        image_file:
          $ref: '#/components/schemas/UploadPrepareFile'
      required:
        - display_name
        - image_tag
        - image_file
    CloudGamesCreateGameBuildOutput:
      type: object
      properties:
        build_id:
          type: string
          description: A universally unique identifier.
        upload_id:
          type: string
          description: A universally unique identifier.
        image_presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - build_id
        - upload_id
        - image_presigned_request
    CloudGamesListGameCdnSitesOutput:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/CloudCdnSiteSummary'
          description: A list of CDN site summaries.
      required:
        - sites
    CloudGamesCreateGameCdnSiteInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        files:
          type: array
          items:
            $ref: '#/components/schemas/UploadPrepareFile'
          description: A list of files preparing to upload.
      required:
        - display_name
        - files
    CloudGamesCreateGameCdnSiteOutput:
      type: object
      properties:
        site_id:
          type: string
          description: A universally unique identifier.
        upload_id:
          type: string
          description: A universally unique identifier.
        presigned_requests:
          type: array
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - site_id
        - upload_id
        - presigned_requests
    CloudGamesGetGamesOutput:
      type: object
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/CloudGamesGameSummary'
          description: A list of game summaries.
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupHandle'
          description: A list of group summaries.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - games
        - groups
        - watch
    CloudGamesCreateGameInput:
      type: object
      properties:
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          description: A universally unique identifier.
      required:
        - name_id
        - display_name
        - developer_group_id
    CloudGamesCreateGameOutput:
      type: object
      properties:
        game_id:
          type: string
          description: A universally unique identifier.
      required:
        - game_id
    CloudGamesValidateGameInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - name_id
    CloudGamesValidateGameOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesGetGameByIdOutput:
      type: object
      properties:
        game:
          $ref: '#/components/schemas/CloudGameFull'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - game
        - watch
    CloudGamesGameBannerUploadPrepareInput:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the game banner.
        mime:
          type: string
          description: The MIME type of the game banner.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
    CloudGamesGameBannerUploadPrepareOutput:
      type: object
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesGameLogoUploadPrepareInput:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the game logo.
        mime:
          type: string
          description: The MIME type of the game logo.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
    CloudGamesGameLogoUploadPrepareOutput:
      type: object
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    CloudGamesGameSummary:
      type: object
      description: A game summary.
      properties:
        game_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        developer_group_id:
          type: string
          description: A universally unique identifier.
        total_player_count:
          type: integer
          description: Unsigned 32 bit integer.
        logo_url:
          type: string
          description: The URL of this game's logo image.
        banner_url:
          type: string
          description: The URL of this game's banner image.
      required:
        - game_id
        - create_ts
        - name_id
        - display_name
        - developer_group_id
    CloudGamesExportMatchmakerLobbyHistoryInput:
      type: object
      properties:
        query_start:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        query_end:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
    CloudGamesExportMatchmakerLobbyHistoryOutput:
      type: object
      properties:
        url:
          type: string
          description: The URL to a CSV file for the given lobby history.
      required:
        - url
    CloudGamesDeleteMatchmakerLobbyOutput:
      type: object
      properties:
        did_remove:
          type: boolean
          description: Whether or not the lobby was successfully stopped.
    CloudGamesGetLobbyLogsOutput:
      type: object
      properties:
        lines:
          type: array
          items:
            type: string
          description: Sorted old to new.
        timestamps:
          type: array
          items:
            type: string
          description: Sorted old to new.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - lines
        - timestamps
        - watch
    CloudGamesExportLobbyLogsInput:
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/CloudGamesLogStream'
      required:
        - stream
    CloudGamesExportLobbyLogsOutput:
      type: object
      properties:
        url:
          type: string
          description: The URL to a CSV file for the given lobby history.
      required:
        - url
    CloudGamesLogStream:
      type: string
      enum:
        - std_out
        - std_err
    CloudGamesNamespacesGetNamespaceAnalyticsMatchmakerLiveOutput:
      type: object
      properties:
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/CloudAnalyticsLobbySummary'
          description: A list of analytics lobby summaries.
      required:
        - lobbies
    CloudGamesNamespacesListNamespaceLobbiesOutput:
      type: object
      properties:
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/CloudLogsLobbySummary'
          description: A list of lobby log summaries.
      required:
        - lobbies
    CloudGamesNamespacesGetNamespaceLobbyOutput:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/CloudLogsLobbySummary'
        metrics:
          $ref: '#/components/schemas/CloudSvcMetrics'
        stdout_presigned_urls:
          type: array
          items:
            type: string
          description: A list of URLs.
        stderr_presigned_urls:
          type: array
          items:
            type: string
          description: A list of URLs.
        perf_lists:
          type: array
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          description: A list of service performance summaries.
      required:
        - lobby
        - stdout_presigned_urls
        - stderr_presigned_urls
        - perf_lists
    CloudGamesCreateCloudTokenOutput:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesCreateGameVersionInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - display_name
        - config
    CloudGamesCreateGameVersionOutput:
      type: object
      properties:
        version_id:
          type: string
          description: A universally unique identifier.
      required:
        - version_id
    CloudGamesValidateGameVersionInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - display_name
        - config
    CloudGamesValidateGameVersionOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesGetGameVersionByIdOutput:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/CloudVersionFull'
      required:
        - version
    CloudValidateGroupInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - display_name
    CloudValidateGroupOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGetGroupBillingOutput:
      type: object
      properties:
        billing:
          $ref: '#/components/schemas/CloudGroupBillingSummary'
        bank_source:
          $ref: '#/components/schemas/CloudGroupBankSource'
        available_regions:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionSummary'
          description: A list of region summaries.
      required:
        - billing
        - bank_source
        - available_regions
    CloudGetGroupInvoicesListOutput:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/CloudGroupBillingInvoice'
          description: A list of a group's billing invoices.
        anchor:
          type: string
          description: The pagination anchor.
      required:
        - invoices
    CloudGetGroupPaymentsListOutput:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/CloudGroupBillingPayment'
          description: A list of a group's billing payments.
        end_payment_id:
          type: string
          description: The ID of the last payment listed.
      required:
        - payments
    CloudGetGroupTransfersListOutput:
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/CloudGroupBillingTransfer'
          description: A list of a group's billing transfers.
        end_transfer_id:
          type: string
          description: The ID of the last transfer listed.
      required:
        - transfers
    CloudGroupBillingCheckoutInput:
      type: object
      properties:
        amount:
          type: number
          format: double
          description: >-
            How much money to checkout (in hundred-thousandths USD, 100,000 =
            $1.00).
    CloudGroupBillingCheckoutOutput:
      type: object
      properties:
        url:
          type: string
          description: The URL of the checkout session.
      required:
        - url
    CloudGetRayPerfLogsOutput:
      type: object
      properties:
        perf_lists:
          type: array
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          description: A list of service performance summaries.
      required:
        - perf_lists
    CloudGetRegionTiersOutput:
      type: object
      properties:
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/CloudRegionTier'
          description: A list of region server tiers.
      required:
        - tiers
    CloudVersionIdentityConfig:
      type: object
      description: Identity configuration for a given version.
      properties:
        display_names:
          type: array
          items:
            type: string
        avatars:
          type: array
          items:
            type: string
            format: uuid
        custom_display_names:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomDisplayName'
          description: '**Deprecated**'
        custom_avatars:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomAvatar'
          description: '**Deprecated**'
    CloudVersionIdentityCustomDisplayName:
      type: object
      properties:
        display_name:
          type: string
      required:
        - display_name
    CloudVersionIdentityCustomAvatar:
      type: object
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
      required:
        - upload_id
    CloudVersionMatchmakerPortRange:
      type: object
      description: Range of ports that can be connected to.
      properties:
        min:
          type: integer
          description: Unsigned 32 bit integer.
        max:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - min
        - max
    CloudVersionMatchmakerProxyProtocol:
      type: string
      enum:
        - http
        - https
        - udp
      description: A proxy protocol.
    CloudVersionMatchmakerCaptcha:
      type: object
      description: Matchmaker captcha configuration.
      properties:
        requests_before_reverify:
          type: integer
          description: >-
            Denotes how many requests a connection can make before it is
            required to reverify a captcha.
        verification_ttl:
          type: integer
          format: int64
          description: >-
            Denotes how long a connection can continue to reconnect without
            having to reverify a captcha (in milliseconds).
        hcaptcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptcha'
      required:
        - requests_before_reverify
        - verification_ttl
    CloudVersionMatchmakerCaptchaHcaptcha:
      type: object
      description: hCpatcha configuration.
      properties:
        level:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptchaLevel'
      required:
        - level
    CloudVersionMatchmakerCaptchaHcaptchaLevel:
      type: string
      enum:
        - easy
        - moderate
        - difficult
        - always_on
      description: How hard a captcha should be.
    CloudVersionMatchmakerNetworkMode:
      type: string
      enum:
        - bridge
        - host
    CloudVersionMatchmakerGameMode:
      type: object
      description: A game mode.
      properties:
        regions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
    CloudVersionMatchmakerGameModeRegion:
      type: object
      description: A game mode region.
      properties:
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
    CloudVersionMatchmakerGameModeRuntimeDocker:
      type: object
      description: A game mode runtime running through Docker.
      properties:
        dockerfile:
          type: string
          description: Client-side configuration
        image:
          type: string
          format: uuid
        args:
          type: array
          items:
            type: string
        env:
          type: object
          additionalProperties:
            type: string
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerGameModeRuntimeDockerPort
    CloudVersionMatchmakerGameModeRuntimeDockerPort:
      type: object
      description: A docker port.
      properties:
        port:
          type: integer
          description: The port number to connect to.
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyProtocol'
        dev_port:
          type: integer
          description: Client-side configuration
        dev_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyProtocol'
          description: Client-side configuration
    CloudVersionMatchmakerGameModeIdleLobbiesConfig:
      type: object
      description: Configuration for how many idle lobbies a game version should have.
      properties:
        min:
          type: integer
        max:
          type: integer
      required:
        - min
        - max
    CloudVersionMatchmakerLobbyGroup:
      type: object
      description: A game mode.
      properties:
        name_id:
          type: string
          description: >-
            **Deprecated: use GameMode instead**

            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        regions:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRegion'
          description: A list of game mode regions.
        max_players_normal:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_direct:
          type: integer
          description: Unsigned 32 bit integer.
        max_players_party:
          type: integer
          description: Unsigned 32 bit integer.
        runtime:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntime'
      required:
        - name_id
        - regions
        - max_players_normal
        - max_players_direct
        - max_players_party
        - runtime
    CloudVersionMatchmakerLobbyGroupRuntime:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A union representing the runtime a game mode runs on.
      properties:
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDocker'
    CloudVersionMatchmakerLobbyGroupRegion:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A game mode region.
      properties:
        region_id:
          type: string
          description: A universally unique identifier.
        tier_name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
        idle_lobbies:
          $ref: >-
            #/components/schemas/CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig
      required:
        - region_id
        - tier_name_id
    CloudVersionMatchmakerLobbyGroupRuntimeDocker:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A game mode runtime running through Docker.
      properties:
        build_id:
          type: string
          format: uuid
        args:
          type: array
          items:
            type: string
        env_vars:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
      required:
        - args
        - env_vars
        - ports
    CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A docker environment variable.
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
    CloudVersionMatchmakerLobbyGroupRuntimeDockerPort:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        A docker port.
      properties:
        label:
          type: string
          description: The label of this docker port.
        target_port:
          type: integer
          description: The port number to connect to.
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        proxy_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyProtocol'
      required:
        - label
        - proxy_protocol
    CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig:
      type: object
      description: |-
        **Deprecated: use GameMode instead**
        Configuration for how many idle lobbies a game version should have.
      properties:
        min_idle_lobbies:
          type: integer
          description: Unsigned 32 bit integer.
        max_idle_lobbies:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - min_idle_lobbies
        - max_idle_lobbies
    Identifier:
      type: string
      description: >-
        A human readable short identifier used to references resources.
        Different than a `uuid` because this is intended to be human readable.
        Different than `DisplayName` because this should not include special
        characters and be short.
    Bio:
      type: string
      description: Follows regex ^(?:[^\n\r]+\n?|\n){1,5}$
    Email:
      type: string
      description: A valid email address
    Jwt:
      type: string
      description: Documentation at https://jwt.io/
    WatchQuery:
      type: string
      description: A query parameter denoting the requests watch index.
    WatchResponse:
      type: object
      description: Provided by watchable endpoints used in blocking loops.
      properties:
        index:
          type: string
          description: |
            Index indicating the version of the data responded.
            Pass this to `WatchQuery` to block and wait for the next response.
      required:
        - index
    DisplayName:
      type: string
    AccountNumber:
      type: integer
    Timestamp:
      type: string
      description: RFC3339 timestamp
    ValidationError:
      type: object
      description: An error given by failed content validation.
      properties:
        path:
          type: array
          items:
            type: string
          description: A list of strings denoting the origin of a validation error.
      required:
        - path
    EmptyObject:
      type: object
      properties: {}
    GameHandle:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
        name_id:
          $ref: '#/components/schemas/Identifier'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        logo_url:
          type: string
        banner_url:
          type: string
      required:
        - game_id
        - name_id
        - display_name
        - logo_url
        - banner_url
    GameStatSummary:
      type: object
      description: A game statistic summary.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        stats:
          type: array
          items:
            $ref: '#/components/schemas/GameStat'
      required:
        - game
        - stats
    GameStat:
      type: object
      description: A game statistic.
      properties:
        config:
          $ref: '#/components/schemas/GameStatConfig'
        overall_value:
          type: number
          format: double
          description: A single overall value of the given statistic.
      required:
        - config
        - overall_value
    GameStatConfig:
      type: object
      description: A game statistic config.
      properties:
        record_id:
          type: string
          format: uuid
        icon_id:
          type: string
          format: uuid
        format:
          $ref: '#/components/schemas/GameStatFormatMethod'
        aggregation:
          $ref: '#/components/schemas/GameStatAggregationMethod'
        sorting:
          $ref: '#/components/schemas/GameStatSortingMethod'
        priority:
          type: integer
        display_name:
          $ref: '#/components/schemas/DisplayName'
        postfix_singular:
          type: string
          description: >-
            A string appended to the end of a singular game statistic's value.
            Example: 1 **dollar**.
        postfix_plural:
          type: string
          description: >-
            A string appended to the end of a game statistic's value that is not
            exactly 1. Example: 45 **dollars**.
        prefix_singular:
          type: string
          description: >-
            A string appended to the beginning of a singular game statistic's
            value. Example: **value** 1.
        prefix_plural:
          type: string
          description: >-
            A string prepended to the beginning of a game statistic's value that
            is not exactly 1. Example: **values** 45.
      required:
        - record_id
        - icon_id
        - format
        - aggregation
        - sorting
        - priority
        - display_name
    GameStatFormatMethod:
      type: string
      enum:
        - integer
        - float_1
        - float_2
        - float_3
        - duration_minute
        - duration_second
        - duration_hundredth_second
      description: A value denoting the format method of a game statistic.
    GameStatAggregationMethod:
      type: string
      enum:
        - sum
        - average
        - min
        - max
      description: A value denoting the aggregation method of a game statistic.
    GameStatSortingMethod:
      type: string
      enum:
        - desc
        - asc
      description: A value denoting the sorting method of a game statistic.
    GeoCoord:
      type: object
      description: Geographical coordinates for a location on Planet Earth.
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      required:
        - latitude
        - longitude
    GeoDistance:
      type: object
      description: Distance available in multiple units.
      properties:
        kilometers:
          type: number
          format: double
        miles:
          type: number
          format: double
      required:
        - kilometers
        - miles
    GroupSummary:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
        dispay_name:
          $ref: '#/components/schemas/DisplayName'
        avatar_url:
          type: string
          description: The URL of this group's avatar image.
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer.
        bio:
          $ref: '#/components/schemas/Bio'
        is_currently_identity_member:
          type: boolean
          description: Whether or not the current identity is a member of this group.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
        member_count:
          type: integer
      required:
        - group_id
        - dispay_name
        - external
        - is_developer
        - bio
        - is_currently_identity_member
        - publicity
        - member_count
    GroupPublicity:
      type: string
      enum:
        - open
        - closed
      description: The current publicity value for the given group.
    GroupHandle:
      type: object
      description: A group handle.
      properties:
        group_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        avatar_url:
          type: string
          description: The URL of this group's avatar image
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer group.
      required:
        - group_id
        - display_name
        - external
    GroupExternalLinks:
      type: object
      description: External links for this group.
      properties:
        profile:
          type: string
          description: A link to this group's profile page.
        chat:
          type: string
          description: A link to this group's chat page.
      required:
        - profile
        - chat
    GroupJoinRequest:
      type: object
      description: A group join request.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - identity
        - ts
    GroupMember:
      type: object
      description: A group member.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
        - identity
    GroupProfile:
      type: object
      description: A list of group profiles.
      properties:
        group_id:
          type: string
          description: A universally unique identifier.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        avatar_url:
          type: string
          description: The URL of this group's avatar image.
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        is_developer:
          type: boolean
          description: Whether or not this group is a developer.
        bio:
          type: string
          description: Detailed information about a profile.
        is_current_identity_member:
          type: boolean
          description: Whether or not the current identity is a member of this group.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
        member_count:
          type: integer
          description: Unsigned 32 bit integer.
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMember'
          description: A list of group members.
        join_requests:
          type: array
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          description: A list of group join requests.
        is_current_identity_requesting_join:
          type: boolean
          description: >-
            Whether or not the current identity is currently requesting to join
            this group.
        owner_identity_id:
          type: string
          description: A universally unique identifier.
        thread_id:
          type: string
          description: A universally unique identifier.
      required:
        - group_id
        - display_name
        - external
        - bio
        - publicity
        - members
        - join_requests
        - owner_identity_id
    GroupBannedIdentity:
      type: object
      description: A banned identity.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        ban_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
      required:
        - identity
        - ban_ts
    GroupGetInviteOutput:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    GroupConsumeInviteOutput:
      type: object
      properties:
        group_id:
          type: string
          description: A universally unique identifier.
    GroupCreateInviteInput:
      type: object
      properties:
        ttl:
          type: number
          format: double
          description: How long until the group invite expires (in milliseconds).
        use_count:
          type: number
          format: double
          description: How many times the group invite can be used.
    GroupCreateInviteOutput:
      type: object
      properties:
        code:
          type: string
          description: >-
            The code that will be passed to `rivet.api.group#ConsumeInvite` to
            join a group.
      required:
        - code
    GroupResolveJoinRequestInput:
      type: object
      properties:
        resolution:
          type: boolean
    IdentityGlobalEvent:
      type: object
      description: An event relevant to the current identity.
      properties:
        ts:
          $ref: '#/components/schemas/Timestamp'
        kind:
          $ref: '#/components/schemas/IdentityGlobalEventKind'
        notification:
          $ref: '#/components/schemas/IdentityGlobalEventNotification'
      required:
        - ts
        - kind
        - notification
    IdentityGlobalEventKind:
      type: object
      properties:
        chat_message:
          $ref: '#/components/schemas/IdentityGlobalEventChatMessage'
        chat_read:
          $ref: '#/components/schemas/IdentityGlobalEventChatRead'
        party_update:
          $ref: '#/components/schemas/IdentityGlobalEventPartyUpdate'
        identity_update:
          $ref: '#/components/schemas/IdentityGlobalEventIdentityUpdate'
        matchmaker_lobby_join:
          $ref: '#/components/schemas/IdentityGlobalEventMatchmakerLobbyJoin'
        chat_thread_remove:
          $ref: '#/components/schemas/IdentityGlobalEventChatThreadRemove'
    IdentityGlobalEventNotification:
      type: object
      description: >
        Notifications represent information that should be presented to the user

        immediately.

        At the moment, only chat message events have associated notifications.

        # Display

        Notifications should be displayed in an unobtrusive manner throughout
        the

        entire game. Notifications should disappear after a few seconds if not

        interacted with.

        # Interactions

        If your platform supports it, notifications should be able to be clicked
        or

        tapped in order to open the relevant context for the event.

        For a simple implementation of notification interactions, open `url` in
        a

        web browser to present the relevant context. For example, a chat message

        notification will open the thread the chat message was sent in.

        For advanced implementations that implement a custom chat UI, use

        `GlobalEvent.kind` to determine what action to take when the
        notification is interacted with. 

        For example, if the global event kind is `GlobalEventChatMessage`, then
        open

        the chat UI for the given thread.
      properties:
        title:
          type: string
        description:
          type: string
        thumbnail_url:
          type: string
          description: >-
            URL to an image thumbnail that should be shown for this
            notification.
        url:
          type: string
          description: Rivet Hub URL that holds the relevant context for this notification.
      required:
        - title
        - description
        - thumbnail_url
        - url
    IdentityGlobalEventChatMessage:
      type: object
      properties:
        thread:
          $ref: '#/components/schemas/ChatThread'
      required:
        - thread
    IdentityGlobalEventChatRead:
      type: object
      properties:
        thread_id:
          type: string
          format: uuid
        read_ts:
          $ref: '#/components/schemas/Timestamp'
      required:
        - thread_id
        - read_ts
    IdentityGlobalEventPartyUpdate:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartySummary'
      required:
        - party
    IdentityGlobalEventIdentityUpdate:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
      required:
        - identity
    IdentityGlobalEventMatchmakerLobbyJoin:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    IdentityGlobalEventChatThreadRemove:
      type: object
      description: >
        Received any time the current identity is no longer able to access the 
        given thread. This can happen if the identity leaves a group or party.
      properties:
        thread_id:
          type: string
          format: uuid
      required:
        - thread_id
    IdentityUpdateGameActivity:
      type: object
      description: >-
        Information about the identity's current game. This is information that
        all other identities can see about what the current identity is doing.
      properties:
        message:
          type: string
          description: A short message about the current game activity.
        public_metadata:
          description: JSON data seen by anyone.
        mutual_metadata:
          description: >-
            JSON data seen only by the given identity and their mutual
            followers.
      required:
        - public_metadata
        - mutual_metadata
    IdentityHandle:
      type: object
      description: An identity handle.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        party:
          $ref: '#/components/schemas/PartyHandle'
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
    IdentitySummary:
      type: object
      description: An identity summary.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        party:
          $ref: '#/components/schemas/PartyHandle'
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        following:
          type: boolean
          description: Whether or not the requestee's identity is following this identity.
        is_following_me:
          type: boolean
          description: >-
            Whether or not this identity is both followng and is followed by the
            requestee's identity.
        is_mutual_following:
          type: boolean
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
        - following
        - is_following_me
        - is_mutual_following
    IdentityProfile:
      type: object
      description: An identity profile.
      properties:
        identity_id:
          type: string
          format: uuid
        display_name:
          $ref: '#/components/schemas/DisplayName'
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          type: string
          description: The URL of this identity's avatar image.
        presence:
          $ref: '#/components/schemas/IdentityPresence'
        party:
          $ref: '#/components/schemas/PartySummary'
          description: Whether or not this identity is registered with a linked account.
        is_registered:
          type: boolean
          description: Whether or not this identity is registered with a linked account.
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        is_admin:
          type: boolean
          description: Whether or not this identity is an admin.
        is_game_linked:
          type: boolean
          description: >-
            Whether or not this game user has been linked through the Rivet
            dashboard.
        dev_state:
          $ref: '#/components/schemas/IdentityDevState'
        follower_count:
          type: integer
        following_count:
          type: integer
        following:
          type: boolean
          description: Whether or not the requestee's identity is following this identity.
        is_following_me:
          type: boolean
          description: >-
            Whether or not this identity is both followng and is followed by the
            requestee's identity.
        is_mutual_following:
          type: boolean
        join_ts:
          $ref: '#/components/schemas/Timestamp'
        bio:
          $ref: '#/components/schemas/Bio'
        linked_accounts:
          type: array
          items:
            $ref: '#/components/schemas/IdentityLinkedAccount'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGroup'
        games:
          type: array
          items:
            $ref: '#/components/schemas/GameStatSummary'
      required:
        - identity_id
        - display_name
        - account_number
        - avatar_url
        - is_registered
        - external
        - is_admin
        - follower_count
        - following_count
        - following
        - is_following_me
        - is_mutual_following
        - join_ts
        - bio
        - linked_accounts
        - groups
        - games
    IdentityExternalLinks:
      type: object
      description: External links for an identity.
      properties:
        profile:
          type: string
          description: A link to this identity's profile page.
        settings:
          type: string
          description: A link to the Rivet settings page.
        chat:
          type: string
          description: A link to a chat page with the given identity.
      required:
        - profile
    IdentityPresence:
      type: object
      description: Information about the identity's current status, party, and active game.
      properties:
        update_ts:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/IdentityStatus'
        game_activity:
          $ref: '#/components/schemas/IdentityGameActivity'
      required:
        - update_ts
        - status
    IdentityStatus:
      type: string
      enum:
        - online
        - away
        - offline
      description: >-
        The current status of an identity. This helps players understand if
        another player is currently playing or has their game in the background.
    IdentityGameActivity:
      type: object
      description: The game an identity is currently participating in.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        message:
          type: string
          description: A short activity message about the current game activity.
        public_metadata:
          description: JSON data seen by anyone.
        mutual_metadata:
          description: >-
            JSON data seen only by the given identity and their mutual
            followers.
      required:
        - game
        - message
        - public_metadata
        - mutual_metadata
    IdentityGroup:
      type: object
      description: A group that the given identity.
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
        - group
    IdentityDevState:
      type: string
      enum:
        - inactive
        - pending
        - accepted
      description: The state of the given identity's developer status.
    IdentityLinkedAccount:
      type: object
      description: A union representing an identity's linked accounts.
      properties:
        email:
          $ref: '#/components/schemas/IdentityEmailLinkedAccount'
    IdentityEmailLinkedAccount:
      type: object
      description: An identity's linked email.
      properties:
        email:
          $ref: '#/components/schemas/Email'
      required:
        - email
    IdentityGameLinkStatus:
      type: string
      enum:
        - incomplete
        - complete
        - cancelled
    IdentityWatchEventsOutput:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGlobalEvent'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - events
        - watch
    IdentityPrepareGameLinkOutput:
      type: object
      properties:
        identity_link_token:
          type: string
          description: >-
            Pass this to `GetGameLink` to get the linking status. Valid for 15
            minutes.
        identity_link_url:
          type: string
        expire_ts:
          $ref: '#/components/schemas/Timestamp'
      required:
        - identity_link_token
        - identity_link_url
        - expire_ts
    IdentityGetGameLinkOutput:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/IdentityGameLinkStatus'
        game:
          $ref: '#/components/schemas/GameHandle'
        current_identity:
          $ref: '#/components/schemas/IdentityHandle'
        new_identity:
          $ref: '#/components/schemas/IdentityGetGameLinkNewIdentity'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - status
        - game
        - current_identity
        - new_identity
        - watch
    IdentityGetGameLinkNewIdentity:
      type: object
      properties:
        identity_token:
          $ref: '#/components/schemas/Jwt'
        identity_token_expire_ts:
          $ref: '#/components/schemas/Timestamp'
        identity:
          $ref: '#/components/schemas/IdentityProfile'
      required:
        - identity_token
        - identity_token_expire_ts
        - identity
    KvGetBatchOutput:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/KvEntry'
          description: A list of key-value entries.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - entries
        - watch
    KvPutBatchInput:
      type: object
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        entries:
          type: array
          items:
            $ref: '#/components/schemas/KvPutEntry'
          description: A list of entries to insert.
      required:
        - entries
    KvEntry:
      type: object
      description: A key-value entry.
      properties:
        key:
          type: array
          items:
            type: string
          description: A key separated into components.
        deleted:
          type: boolean
      required:
        - key
    KvPutEntry:
      type: object
      description: A new entry to insert into the key-value database.
      properties:
        key:
          type: string
          description: >-
            A string representing a key in the key-value database. Key path
            components are split by a slash (e.g. `a/b/c` has the path
            components `["a", "b", "c"]`). Slashes can be escaped by using a
            forward slash (e.g. `a/b\/c/d` has the path components `["a", "b/c",
            "d"]`). See `rivet.api.kv.common#KeyComponents` for the structure of
            a `rivet.api.kv.common#Key` split by `/`.
      required:
        - key
    MatchmakerLobbyInfo:
      type: object
      description: A public lobby in the lobby list.
      properties:
        region_id:
          type: string
        game_mode_id:
          type: string
        lobby_id:
          type: string
          format: uuid
        max_players_normal:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        total_player_count:
          type: integer
      required:
        - region_id
        - game_mode_id
        - lobby_id
        - max_players_normal
        - max_players_direct
        - max_players_party
        - total_player_count
    MatchmakerGameModeInfo:
      type: object
      description: A game mode that the player can join.
      properties:
        game_mode_id:
          $ref: '#/components/schemas/Identifier'
      required:
        - game_mode_id
    MatchmakerRegionInfo:
      type: object
      description: A region that the player can connect to.
      properties:
        region_id:
          $ref: '#/components/schemas/Identifier'
        provider_display_name:
          type: string
        region_display_name:
          type: string
        datacenter_coord:
          $ref: '#/components/schemas/GeoCoord'
        datacenter_distance_from_client:
          $ref: '#/components/schemas/GeoDistance'
      required:
        - region_id
        - provider_display_name
        - region_display_name
        - datacenter_coord
        - datacenter_distance_from_client
    MatchmakerJoinLobby:
      type: object
      description: A matchmaker lobby.
      properties:
        lobby_id:
          type: string
          format: uuid
        region:
          $ref: '#/components/schemas/MatchmakerJoinRegion'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          description: '**Deprecated**'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
          description: '**Deprecated**'
      required:
        - lobby_id
        - region
        - ports
        - player
    MatchmakerJoinRegion:
      type: object
      description: A matchmaker lobby region.
      properties:
        region_id:
          $ref: '#/components/schemas/Identifier'
        display_name:
          $ref: '#/components/schemas/DisplayName'
      required:
        - region_id
        - display_name
    MatchmakerJoinPort:
      type: object
      properties:
        host:
          type: string
          description: |
            The host for the given port. Will be null if using a port range.
        hostname:
          type: string
        port:
          type: integer
          description: |
            The port number for this lobby. Will be null if using a port range.
        port_range:
          $ref: '#/components/schemas/MatchmakerJoinPortRange'
          description: >
            Whether or not this lobby port uses TLS. You cannot mix a non-TLS
            and TLS ports.
        is_tls:
          type: boolean
      required:
        - hostname
        - is_tls
    MatchmakerJoinPortRange:
      type: object
      description: Inclusive range of ports that can be connected to.
      properties:
        min:
          type: integer
          description: Minimum port that can be connected to. Inclusive range.
        max:
          type: integer
          description: Maximum port that can be connected to. Inclusive range.
      required:
        - min
        - max
    MatchmakerJoinPlayer:
      type: object
      description: A matchmaker lobby player.
      properties:
        token:
          $ref: '#/components/schemas/Jwt'
          description: >
            Pass this token through the socket to the lobby server. The lobby
            server will validate this token with `PlayerConnected.player_token`
      required:
        - token
    MatchmakerFindLobbyOutput:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    MatchmakerJoinLobbyOutput:
      type: object
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
      required:
        - lobby
        - ports
        - player
    MatchmakerListLobbiesOutput:
      type: object
      properties:
        game_modes:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerGameModeInfo'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
        lobbies:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerLobbyInfo'
      required:
        - game_modes
        - regions
        - lobbies
    MatchmakerListRegionsOutput:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
      required:
        - regions
    PartyActivityFindMatchmakerLobbyForPartyInput:
      type: object
      properties:
        game_modes:
          type: array
          items:
            type: string
          description: Game modes to match lobbies against.
        regions:
          type: array
          items:
            type: string
          description: >-
            Regions to match lobbies against. If not specified, the optimal
            region

            will be determined and will attempt to find lobbies in that region.
        prevent_auto_create_lobby:
          type: boolean
          description: |-
            Prevents a new lobby from being created when finding a lobby. If no
            lobby is found, `MATCHMAKER_LOBBY_NOT_FOUND` will be returned.
        captcha:
          $ref: '#/components/schemas/CaptchaConfig'
      required:
        - game_modes
    PartyActivityJoinMatchmakerLobbyForPartyInput:
      type: object
      properties:
        lobby_id:
          type: string
          description: A universally unique identifier.
        captcha:
          $ref: '#/components/schemas/CaptchaConfig'
      required:
        - lobby_id
    PartyCreatePublicityConfig:
      type: object
      description: |-
        Publicity configuration for creating a party.
        Null values will default
      properties:
        public:
          $ref: '#/components/schemas/PartyPublicityLevel'
        mutual_followers:
          $ref: '#/components/schemas/PartyPublicityLevel'
        groups:
          $ref: '#/components/schemas/PartyPublicityLevel'
    PartyCreateInviteConfig:
      type: object
      description: Configuration for creating a party invite.
      properties:
        alias:
          type: string
          description: >-
            An alias used to join a given party. This alias must be unique for
            all invites for your game. Pass this alias to
            `rivet.api.party.common#CreatedInvite$alias` to consume the invite.
    PartyCreatedInvite:
      type: object
      description: Output from a created invite.
      properties:
        alias:
          type: string
          description: >-
            An alias used to join a given party. This alias must be unique for
            all invites for your game. Pass this alias to
            `rivet.api.party.common#CreatedInvite$alias` to consume the invite.
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    PartyJoinInvite:
      type: object
      description: Represents methods of joining a party.
      properties:
        party_id:
          type: string
          format: uuid
        token:
          $ref: '#/components/schemas/Jwt'
        alias:
          type: string
    PartySummary:
      type: object
      properties:
        party_id:
          type: string
          format: uuid
        create_ts:
          $ref: '#/components/schemas/Timestamp'
        activity:
          $ref: '#/components/schemas/PartyActivity'
        external:
          $ref: '#/components/schemas/PartyExternalLinks'
        publicity:
          $ref: '#/components/schemas/PartyPublicity'
        party_size:
          type: integer
        members:
          type: array
          items:
            $ref: '#/components/schemas/PartyMemberSummary'
        thread_id:
          type: string
          format: uuid
      required:
        - party_id
        - create_ts
        - activity
        - external
        - publicity
        - party_size
        - members
        - thread_id
    PartyHandle:
      type: object
      properties:
        party_id:
          type: string
          format: uuid
        create_ts:
          type: string
          format: date-time
        activity:
          $ref: '#/components/schemas/PartyActivity'
        external:
          $ref: '#/components/schemas/PartyExternalLinks'
      required:
        - party_id
        - create_ts
        - activity
        - external
    PartyActivity:
      type: object
      description: A union representing the activity of a given party.
      properties:
        idle:
          $ref: '#/components/schemas/EmptyObject'
          description: A party activity denoting that the party is idle.
        matchmaker_finding_lobby:
          $ref: '#/components/schemas/PartyActivityMatchmakerFindingLobby'
        matchmaker_lobby:
          $ref: '#/components/schemas/PartyActivityMatchmakerLobby'
    PartyActivityMatchmakerFindingLobby:
      type: object
      description: >-
        A party activity denoting that the party is currently searching for a
        lobby.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
      required:
        - game
    PartyActivityMatchmakerLobby:
      type: object
      description: A party activity denoting that the party is currently in a lobby.
      properties:
        lobby:
          $ref: '#/components/schemas/PartyMatchmakerLobby'
        game:
          $ref: '#/components/schemas/GameHandle'
      required:
        - lobby
        - game
    PartyExternalLinks:
      type: object
      description: External links for a party.
      properties:
        chat:
          type: string
          description: A link to the given party's chat thread.
      required:
        - chat
    PartyMatchmakerLobby:
      type: object
      description: A party lobby.
      properties:
        lobby_id:
          type: string
          format: uuid
      required:
        - lobby_id
    PartyPublicity:
      type: object
      properties:
        public:
          $ref: '#/components/schemas/PartyPublicityLevel'
        mutual_followers:
          $ref: '#/components/schemas/PartyPublicityLevel'
        groups:
          $ref: '#/components/schemas/PartyPublicityLevel'
      required:
        - public
        - mutual_followers
        - groups
    PartyPublicityLevel:
      type: string
      enum:
        - none
        - view
        - join
    PartyMemberSummary:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        is_leader:
          type: boolean
          description: Whether or not this party member is the leader of the given party.
        join_ts:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/PartyMemberState'
      required:
        - identity
        - is_leader
        - join_ts
        - state
    PartyMemberState:
      type: object
      properties:
        idle:
          $ref: '#/components/schemas/EmptyObject'
          description: A party member state denoting that the member is idle.
        matchmaker_pending:
          $ref: '#/components/schemas/EmptyObject'
          description: >-
            A party member state denoting that the member is currently waiting
            to start matchmaking.
        matchmaker_finding_lobby:
          $ref: '#/components/schemas/EmptyObject'
          description: >-
            A party member state denoting that the member is currently searching
            for a lobby.
        matchmaker_lobby:
          $ref: '#/components/schemas/PartyMemberStateMatchmakerLobby'
    PartyMemberStateMatchmakerLobby:
      type: object
      description: A party member state denoting that the member is in a lobby.
      properties:
        player_id:
          type: string
          format: uuid
      required:
        - player_id
    PartyProfile:
      type: object
      properties:
        party_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        activity:
          $ref: '#/components/schemas/PartyActivity'
        external:
          $ref: '#/components/schemas/PartyExternalLinks'
        publicity:
          $ref: '#/components/schemas/PartyPublicity'
        party_size:
          type: integer
          description: Unsigned 32 bit integer.
        members:
          type: array
          items:
            $ref: '#/components/schemas/PartyMemberSummary'
          description: A list of party members.
        thread_id:
          type: string
          description: A universally unique identifier.
        invites:
          type: array
          items:
            $ref: '#/components/schemas/PartyInvite'
          description: A list of party invites.
      required:
        - party_id
        - create_ts
        - activity
        - external
        - publicity
        - members
        - thread_id
        - invites
    PartyInvite:
      type: object
      description: A party invite.
      properties:
        invite_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
        alias:
          $ref: '#/components/schemas/PartyInviteAlias'
        external:
          $ref: '#/components/schemas/PartyInviteExternalLinks'
      required:
        - invite_id
        - create_ts
        - token
        - external
    PartyInviteAlias:
      type: object
      description: An alias used to join a given party.
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        alias:
          type: string
          description: The alias used to join a given party.
      required:
        - namespace_id
        - alias
    PartyInviteExternalLinks:
      type: object
      description: Extenral links for a party invite.
      properties:
        invite:
          type: string
          description: The invite link used to join this party from an external site.
      required:
        - invite
    PartyGetInviteOutput:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartySummary'
      required:
        - party
    PartyCreateInput:
      type: object
      properties:
        party_size:
          type: number
          format: double
          description: >-
            How many members can join the party. If using this party with the
            matchmaker, this number should be less than or equal to your party
            player limit. Super large parties may not be able to fit insite a
            lobby and be unable to join the game.
        publicity:
          $ref: '#/components/schemas/PartyCreatePublicityConfig'
        invites:
          type: array
          items:
            $ref: '#/components/schemas/PartyCreateInviteConfig'
        matchmaker_current_player_token:
          type: string
          description: >-
            If the player is currently in the lobby, pass the token from

            `rivet.matchmaker#MatchmakerLobbyJoinInfoPlayer$token`.

            This will prevent issuing a new player token and automatically set
            the

            party state to the player's current lobby.
    PartyCreateOutput:
      type: object
      properties:
        party_id:
          type: string
          description: A universally unique identifier.
        invites:
          type: array
          items:
            $ref: '#/components/schemas/PartyCreatedInvite'
      required:
        - party_id
        - invites
    PartyJoinInput:
      type: object
      properties:
        invite:
          $ref: '#/components/schemas/PartyJoinInvite'
        matchmaker_auto_join_lobby:
          type: boolean
          description: >-
            Whether or not to automatically join the game lobby if a party is
            currently in game.
        matchmaker_current_player_token:
          type: string
          description: |-
            If the player is currently in the lobby, pass the token from
            `rivet.matchmaker#MatchmakerLobbyJoinInfoPlayer$token`.
            This will prevent issuing a new player token.
      required:
        - invite
    PartyJoinOutput:
      type: object
      properties:
        party_id:
          type: string
          description: A universally unique identifier.
      required:
        - party_id
    PartyCreateInviteInput:
      type: object
      properties:
        alias:
          type: string
          description: An alias used to join a given party.
    PartyCreateInviteOutput:
      type: object
      properties:
        invite:
          $ref: '#/components/schemas/PartyCreatedInvite'
      required:
        - invite
    PartyGetSelfProfileOutput:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartyProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - watch
    PartySetPublicityInput:
      type: object
      properties:
        public:
          $ref: '#/components/schemas/PartyPublicityLevel'
        mutual_followers:
          $ref: '#/components/schemas/PartyPublicityLevel'
        groups:
          $ref: '#/components/schemas/PartyPublicityLevel'
    PartyGetSelfSummaryOutput:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartySummary'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - watch
    PartyGetProfileOutput:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartyProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - party
        - watch
    PartyGetSummaryOutput:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartySummary'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - party
        - watch
    UploadPresignedRequest:
      type: object
      description: >
        A presigned request used to upload files.  Upload your file to the given
        URL via a PUT request.
      properties:
        path:
          type: string
          description: >
            The name of the file to upload.  This is the same as the one given
            in the upload prepare file.
        url:
          type: string
          description: |
            The URL of the presigned request for which to upload your file to.
      required:
        - path
        - url
    UploadPrepareFile:
      type: object
      description: A file being prepared to upload.
      properties:
        path:
          type: string
          description: The path/filename of the file.
        content_type:
          type: string
          description: The MIME type of the file.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
    ChatSendMessageInput:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/ChatSendTopic'
        message_body:
          $ref: '#/components/schemas/ChatSendMessageBody'
      required:
        - topic
        - message_body
    ChatSendMessageOutput:
      type: object
      properties:
        chat_message_id:
          type: string
          description: A universally unique identifier.
      required:
        - chat_message_id
    ChatGetThreadHistoryOutput:
      type: object
      properties:
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: |-
            Ordered old to new.
            If querying `rivet.api.chat.common#before_and_after`, this will be
            `count * 2` long.
      required:
        - chat_messages
    ChatWatchThreadOutput:
      type: object
      properties:
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: |-
            All messages new messages posted to this thread. Ordered
            old to new.
        typing_statuses:
          type: array
          items:
            $ref: '#/components/schemas/ChatIdentityTypingStatus'
          description: All identities that are currently typing in this thread.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - chat_messages
        - watch
    ChatSetThreadReadInput:
      type: object
      properties:
        last_read_ts:
          type: string
          description: |-
            Any messages newer than this timestamp will be marked as unread.
            This should be the current timestamp (in milliseconds).
      required:
        - last_read_ts
    ChatGetThreadTopicOutput:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/ChatSimpleTopic'
      required:
        - topic
    ChatSetTypingStatusInput:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ChatTypingStatus'
      required:
        - status
    CloudGamesNamespacesCreateGameNamespaceInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        version_id:
          type: string
          description: A universally unique identifier.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - version_id
        - name_id
    CloudGamesNamespacesCreateGameNamespaceOutput:
      type: object
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
      required:
        - namespace_id
    CloudGamesNamespacesValidateGameNamespaceInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        name_id:
          type: string
          description: >-
            A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be
            human readable. Different than `rivet.common#DisplayName` because
            this should not include special characters and be short.
      required:
        - display_name
        - name_id
    CloudGamesNamespacesValidateGameNamespaceOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesGetGameNamespaceByIdOutput:
      type: object
      properties:
        namespace:
          $ref: '#/components/schemas/CloudNamespaceFull'
      required:
        - namespace
    CloudGamesNamespacesUpdateNamespaceCdnAuthUserInput:
      type: object
      properties:
        user:
          type: string
          description: A user name.
        password:
          type: string
          description: >-
            A bcrypt encrypted password. An error is returned if the given
            string is not properly encrypted.
      required:
        - user
        - password
    CloudGamesNamespacesSetNamespaceCdnAuthTypeInput:
      type: object
      properties:
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
      required:
        - auth_type
    CloudGamesNamespacesToggleNamespaceDomainPublicAuthInput:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether or not to enable authentication based on domain.
      required:
        - enabled
    CloudGamesNamespacesAddNamespaceDomainInput:
      type: object
      properties:
        domain:
          type: string
          description: A valid domain name (no protocol).
      required:
        - domain
    CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigInput:
      type: object
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigInput:
      type: object
      properties:
        lobby_count_max:
          type: integer
          description: Unsigned 32 bit integer.
        max_players:
          type: integer
          description: Unsigned 32 bit integer.
      required:
        - lobby_count_max
        - max_players
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentInput:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname used for the token.
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudMatchmakerDevelopmentPort'
        lobby_ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
          description: |-
            **Deprecated**
            A list of docker ports.
      required:
        - hostname
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentOutput:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentInput:
      type: object
      properties:
        hostname:
          type: string
        lobby_ports:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort
          description: A list of docker ports.
      required:
        - hostname
        - lobby_ports
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    CloudGamesNamespacesCreateGameNamespaceTokenPublicOutput:
      type: object
      properties:
        token:
          type: string
          description: >-
            A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs
            of

            JSON.
      required:
        - token
    CloudGamesNamespacesUpdateGameNamespaceVersionInput:
      type: object
      properties:
        version_id:
          type: string
          description: A universally unique identifier.
      required:
        - version_id
    CloudVersionConfig:
      type: object
      description: Cloud configuration for a given version.
      properties:
        cdn:
          $ref: '#/components/schemas/CloudVersionCdnConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudVersionMatchmakerConfig'
        kv:
          $ref: '#/components/schemas/CloudVersionKvConfig'
        identity:
          $ref: '#/components/schemas/CloudVersionIdentityConfig'
    CloudVersionFull:
      type: object
      description: A full version.
      properties:
        version_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
      required:
        - version_id
        - create_ts
        - display_name
        - config
    CloudVersionSummary:
      type: object
      description: A version summary.
      properties:
        version_id:
          type: string
          description: A universally unique identifier.
        create_ts:
          type: string
          format: date-time
          description: RFC3339 timestamp.
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - version_id
        - create_ts
        - display_name
    CloudVersionCdnConfig:
      type: object
      description: CDN configuration for a given version.
      properties:
        build_command:
          type: string
          description: Client-side configuration
        build_output:
          type: string
          description: Client-side configuration
        site:
          type: string
          description: A universally unique identifier.
        routes:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnRoute'
          description: Multiple CDN version routes.
        site_id:
          type: string
          description: '**Deprecated**'
    CloudVersionCdnRoute:
      type: object
      properties:
        glob:
          type: string
        priority:
          type: integer
          description: Unsigned 32 bit integer.
        middlewares:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnMiddleware'
          description: Multiple CDN version middleware.
      required:
        - glob
        - priority
        - middlewares
    CloudVersionCdnMiddleware:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/CloudVersionCdnMiddlewareKind'
      required:
        - kind
    CloudVersionCdnMiddlewareKind:
      type: object
      properties:
        custom_headers:
          $ref: '#/components/schemas/CloudVersionCdnCustomHeadersMiddleware'
    CloudVersionCdnCustomHeadersMiddleware:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionCdnHeader'
      required:
        - headers
    CloudVersionCdnHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    CloudVersionKvConfig:
      type: object
      description: KV configuration for a given version.
      properties: {}
    CloudVersionMatchmakerConfig:
      type: object
      description: Matchmaker configuration for a given version.
      properties:
        game_modes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameMode'
          description: A list of game modes.
        captcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptcha'
        dev_hostname:
          type: string
          description: Client-side configuration
        regions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        tier:
          type: string
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
        lobby_groups:
          type: array
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroup'
          description: |-
            **Deprecated: use `game_modes` instead**
            A list of game modes.
    GroupListSuggestedOutput:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupSummary'
          description: A list of group summaries.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - groups
        - watch
    GroupCreateInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
      required:
        - display_name
    GroupCreateOutput:
      type: object
      properties:
        group_id:
          type: string
          description: A universally unique identifier.
      required:
        - group_id
    GroupPrepareAvatarUploadInput:
      type: object
      properties:
        path:
          type: string
          description: The path/filename of the group avatar.
        mime:
          type: string
          description: The MIME type of the group avatar.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
    GroupPrepareAvatarUploadOutput:
      type: object
      properties:
        upload_id:
          type: string
          description: A universally unique identifier.
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    GroupValidateProfileInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        bio:
          type: string
          description: Detailed information about a profile.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
    GroupValidateProfileOutput:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: A list of validation errors.
      required:
        - errors
    GroupSearchOutput:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupHandle'
          description: A list of group handles.
        anchor:
          type: string
      required:
        - groups
    GroupGetBansOutput:
      type: object
      properties:
        banned_identities:
          type: array
          items:
            $ref: '#/components/schemas/GroupBannedIdentity'
          description: A list of banned group members.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - banned_identities
        - watch
    GroupGetJoinRequestsOutput:
      type: object
      properties:
        join_requests:
          type: array
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          description: A list of group join requests.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - join_requests
        - watch
    GroupGetMembersOutput:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMember'
          description: A list of group members.
        anchor:
          type: string
          description: The pagination anchor.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - members
        - watch
    GroupGetProfileOutput:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - group
        - watch
    GroupUpdateProfileInput:
      type: object
      properties:
        display_name:
          type: string
          description: Represent a resource's readable display name.
        bio:
          type: string
          description: Detailed information about a profile.
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
    GroupGetSummaryOutput:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupSummary'
      required:
        - group
    GroupTransferOwnershipInput:
      type: object
      properties:
        new_owner_identity_id:
          type: string
          description: |-
            Identity to transfer the group to.
            Must be a member of the group.
      required:
        - new_owner_identity_id
    IdentitySetupOutput:
      type: object
      properties:
        identity_token:
          $ref: '#/components/schemas/Jwt'
          description: >
            Token used to authenticate the identity. 

            Should be stored somewhere permanent. 

            Pass this to `rivet.api.identity#Setup$existing_identity_token` next
            time `rivet.api.identity#Setup` is called. 

            Token has a 90 day TTL. 

            This means that if `rivet.api.identity#Setup` is not called again
            within 90 days, the token will no longer be valid. 

            If this happens, the user can recover their account through the
            linking process (see `rivet.api.identity#PrepareGameLink`). 

            This token should be stored locally and never sent to a server or
            another device. 

            If this token is comprimised, anyone with access to this token has
            control of the identity.
        identity_token_expire_ts:
          $ref: '#/components/schemas/Timestamp'
          description: |
            Timestamp (in milliseconds) at which the token expires.
        identity:
          $ref: '#/components/schemas/IdentityProfile'
          description: |
            Information about the identity that was just authenticated.
        game_id:
          type: string
          format: uuid
      required:
        - identity_token
        - identity_token_expire_ts
        - identity
        - game_id
    IdentityGetProfileOutput:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - identity
        - watch
    IdentityGetHandlesOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
      required:
        - identities
    IdentityGetSummariesOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentitySummary'
      required:
        - identities
    IdentitySearchOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
          description: |
            The pagination anchor.
      required:
        - identities
        - anchor
    IdentityPrepareAvatarUploadOutput:
      type: object
      properties:
        upload_id:
          type: string
          format: uuid
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - upload_id
        - presigned_request
    IdentityListFollowersOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
      required:
        - identities
    IdentityListFriendsOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
      required:
        - identities
    IdentityListMutualFriendsOutput:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/IdentityHandle'
        anchor:
          type: string
      required:
        - identities
    KvGetOutput:
      type: object
      properties:
        deleted:
          type: boolean
          description: >-
            Whether or not the entry has been deleted. Only set when watching
            this endpoint.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - watch
    KvPutInput:
      type: object
      properties:
        namespace_id:
          type: string
          description: A universally unique identifier.
        key:
          type: string
          description: Any JSON value to set the key to.
      required:
        - key
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
